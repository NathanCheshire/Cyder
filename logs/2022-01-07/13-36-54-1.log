[13-36-54] [ENTRY]: [Nathan]
[13-36-54] [SYSTEM_IO]: System data pared in IOUtil's static block
[13-36-56] [LOGIN]: [AUTOCYPHER ATTEMPT]
[13-36-56] [JAVA ARGS]: [LOCATION] [La casa de Nathan]
[13-36-56] [LOGIN]: [AUTOCYPHER PASS, e5a50641-21d1-3654-b738-c0e4b2dc61b1]
[13-36-57] [SYSTEM_IO]: Userdata requested: Name
[13-36-57] [SYSTEM_IO]: Userdata requested: RandomBackground
[13-36-57] [SYSTEM_IO]: Userdata requested: FullScreen
[13-36-57] [SYSTEM_IO]: Userdata requested: Name
[13-36-57] [SYSTEM_IO]: Userdata requested: Foreground
[13-36-57] [SYSTEM_IO]: Userdata requested: Foreground
[13-36-57] [SYSTEM_IO]: Userdata requested: FullScreen
[13-36-58] [SYSTEM_IO]: Userdata requested: FullScreen
[13-36-58] [SYSTEM_IO]: Userdata requested: Foreground
[13-36-58] [SYSTEM_IO]: Userdata requested: Font
[13-36-58] [SYSTEM_IO]: Userdata requested: OutputBorder
[13-36-58] [SYSTEM_IO]: Userdata requested: FullScreen
[13-36-58] [SYSTEM_IO]: Userdata requested: InputBorder
[13-36-58] [SYSTEM_IO]: Userdata requested: Foreground
[13-36-58] [SYSTEM_IO]: Userdata requested: Foreground
[13-36-58] [SYSTEM_IO]: Userdata requested: Foreground
[13-36-58] [SYSTEM_IO]: Userdata requested: Font
[13-36-58] [SYSTEM_IO]: Userdata requested: OutputFill
[13-36-58] [SYSTEM_IO]: Userdata requested: InputFill
[13-36-58] [SYSTEM_IO]: Userdata requested: consolepinned
[13-36-58] [SYSTEM_IO]: Userdata requested: consolepinned
[13-36-58] [ACTION]: CyderFrame disposed with fastclose: true, CyderFrame: Component name = [cyder.ui.CyderFrame], bounds = [(980, 378, 600, 600)], hash = [1141551418], parentFrame = [Object itself is the top level frame], associated text = [No getText() method found], tooltip text = [No getTooltipText() method found], title = [Cyder Splash]
[13-36-58] [ACTION]: Console loaded in 4332ms
[13-36-58] [SYSTEM_IO]: Userdata requested: windowlocx
[13-36-58] [SYSTEM_IO]: Userdata requested: windowlocy
[13-36-58] [SYSTEM_IO]: Userdata requested: DebugWindows
[13-36-58] [ENTRY]: [TESTING MODE]
[13-36-58] [SYSTEM_IO]: Userdata requested: laststart
[13-36-58] [SYSTEM_IO]: Userdata requested: IntroMusic
[13-36-58] [ACTION]: [Stellar Cyder [Nathan]] [NOTIFICATION] Console loaded in 4332ms
[13-36-59] [SYSTEM_IO]: Userdata requested: persistentnotifications
[13-37-01] [CONSOLE_OUT]: [STRING] GroupAlgorithms:     //Precise method, which guarantees v = v1 when t = 1.
[13-37-01] [CONSOLE_OUT]: [STRING] GroupAlgorithms:     // This method is monotonic only when v0 * v1 < 0.
[13-37-01] [CONSOLE_OUT]: [STRING] GroupAlgorithms:     // Lerping between same values might not produce the same value
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms: //this obviously isn't my code, I have somewhat of a life
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms: //Credit: https://gist.github.com/KdotJPG/b1270127455a94ac5d19
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:     // 2D OpenSimplex Noise.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Place input coordinates onto grid.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Floor to get grid coordinates of rhombus (stretched square) super-cell origin.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Compute grid coordinates relative to rhombus origin.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Sum those together to get a value that determines which region we're in.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Positions relative to origin point.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // We'll be defining these inside the next block and using them afterwards.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Contribution (1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Contribution (0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Contribution (0,0) or (1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Extra Vertex
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:     // 3D OpenSimplex Noise.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Place input coordinates on simplectic honeycomb.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:     // Not as good as in SuperSimplex/OpenSimplex2S, since there are more visible differences between different slices.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:     // The Z coordinate should always be the "different" coordinate in your use case.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Combine rotation with skew transform.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:     // Similar to the above, except the Y coordinate should always be the "different" coordinate in your use case.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Combine rotation with skew transform.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:     // 3D OpenSimplex Noise (base which takes skewed coordinates directly).
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Floor to get simplectic honeycomb coordinates of rhombohedron (stretched cube) super-cell origin.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Compute simplectic honeycomb coordinates relative to rhombohedral origin.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Sum those together to get a value that determines which region we're in.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Positions relative to origin point.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // We'll be defining these inside the next block and using them afterwards.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Determine which two of (0,0,1), (0,1,0), (1,0,0) are closest.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Now we determine the two lattice points not part of the tetrahedron that may contribute.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // This depends on the closest two tetrahedral vertices, including (0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Determine which two tetrahedral vertices are the closest, out of (1,1,0), (1,0,1), (0,1,1) but not (1,1,1).
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Now we determine the two lattice points not part of the tetrahedron that may contribute.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // This depends on the closest two tetrahedral vertices, including (1,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide between point (0,0,1) and (1,1,0) as closest
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide between point (0,1,0) and (1,0,1) as closest
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // The closest out of the two (1,0,0) and (0,1,1) will replace the furthest out of the two decided above, if closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Where each of the two closest points are determines how the extra two vertices are calculated.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // One of the two extra points is (1,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // Other extra point is based on the shared axis.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // One of the two extra points is (0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // Other extra point is based on the omitted axis.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                 // One contribution is a permutation of (1,1,-1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                 // One contribution is a permutation of (0,0,2)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // First extra vertex
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Second extra vertex
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Get points for A4 lattice
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:     // 4D OpenSimplex Noise.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Floor to get simplectic honeycomb coordinates of rhombo-hypercube super-cell origin.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Compute simplectic honeycomb coordinates relative to rhombo-hypercube origin.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Sum those together to get a value that determines which region we're in.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Positions relative to origin point.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // We'll be defining these inside the next block and using them afterwards.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Determine which two of (0,0,0,1), (0,0,1,0), (0,1,0,0), (1,0,0,0) are closest.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Now we determine the three lattice points not part of the pentachoron that may contribute.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // This depends on the closest two pentachoron vertices, including (0,0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Determine which two of (1,1,1,0), (1,1,0,1), (1,0,1,1), (0,1,1,1) are closest.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Now we determine the three lattice points not part of the pentachoron that may contribute.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // This depends on the closest two pentachoron vertices, including (0,0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide between (1,1,0,0) and (0,0,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide between (1,0,1,0) and (0,1,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Closer between (1,0,0,1) and (0,1,1,0) will replace the further of a and b, if closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (1,0,0,0) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (0,1,0,0) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (0,0,1,0) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (0,0,0,1) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Where each of the two closest points are determines how the extra three vertices are calculated.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // One combination is a permutation of (0,0,0,2) based on c2
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // One of the two extra points is (0,0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // Other two points are based on the omitted axes.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                 // Two contributions are the bigger-sided point with each 0 replaced with -1.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                 // One contribution is a permutation of (0,0,0,2) based on the smaller-sided point
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide between (0,0,1,1) and (1,1,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide between (0,1,0,1) and (1,0,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Closer between (0,1,1,0) and (1,0,0,1) will replace the further of a and b, if closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (0,1,1,1) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (1,0,1,1) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (1,1,0,1) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Decide if (1,1,1,0) is closer.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Where each of the two closest points are determines how the extra three vertices are calculated.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // Two contributions are permutations of (0,0,0,1) and (0,0,0,2) based on c1
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // One contribution is a permutation of (1,1,1,-1) based on c2
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // One of the two extra points is (1,1,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                     // Other two points are based on the shared axes.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                 // Two contributions are the bigger-sided point with each 1 replaced with 2.
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:                 // One contribution is a permutation of (1,1,1,-1) based on the smaller-sided point
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,1,0,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (1,0,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,1,0)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,1,0,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:             // Contribution (0,0,1,1)
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // First extra vertex
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Second extra vertex
[13-37-01] [CONSOLE_OUT]: [STRING] OpenSimplexAlgorithms:         // Third extra vertex
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:     //patterns for code ananlysis
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * Returns the regex pattern for an optional char
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * @param chars chars enclosed in square brackets that should be optional
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * @return the string you gave with "?" at the end basically
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * Returns a regex representing n successive digits
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * @param n the number of digits to accept
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * @return regex representing n successive digits, no more, no less
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * Same as {@code nDigits(String)} except the number of digits may be in the inclusive range of [0, n]
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * @param n the max number of digits
[13-37-01] [CONSOLE_OUT]: [STRING] CyderRegexPatterns:      * @return a regex representing 0 to n digits
[13-37-01] [CONSOLE_OUT]: [STRING] CyderStrings:     //instantiation of a static class message
[13-37-01] [CONSOLE_OUT]: [STRING] User:     //toString
[13-37-01] [CONSOLE_OUT]: [STRING] User:     //inner classes
[13-37-01] [CONSOLE_OUT]: [STRING] UserCreator:                             //as per convention, IGNORE for tooltip means ignore when creating user
[13-37-01] [CONSOLE_OUT]: [STRING] UserCreator:                             // whilst IGNORE for default value means ignore for edit user
[13-37-01] [CONSOLE_OUT]: [STRING] UserCreator:                         //attempt to log in new user if it's the only user
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                         //if this is too small or big, where is it resized and why is it too big?
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                         //rename file to new name
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                             //was it a music file?
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                                     //try to find a file with the same name as oldname
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                                     //found corresponding album art so rename it as well
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                                         //rename file to new name
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                             //attempt to find album art
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                             //find corresponding album art and delete
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                     //input color fill
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //foreground
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //font
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //background
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //input color fill
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //windowcolor
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //reset font scroll position
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //other defaults colors below
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //adding components
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //print pairs here
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //separate the components
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:             //check boxes to toggle preferences
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                     //common part extracted
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                         //move enter check down
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                         //thickness of line drawn
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                         //length from center to bottom most check point
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                         //length from bottom most part back up
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                     //clicks make it here, but not toggled properly and not updated in menu
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //after everything is on pane, use this to center it
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //set menu location to top
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //adding components
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //print pairs here
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //needed for focus traversal
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                 //valid so write and refresh consoleclock
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:                         //default location
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //more labels, fields, and if applicable, validation buttons here
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //after everything is on pane, use this to center it
[13-37-01] [CONSOLE_OUT]: [STRING] UserEditor:         //set menu location to top
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:      * Setup and start the best program ever made :D
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:      * @param CA possible command line args passed in. They serve no purpose yet
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:      *           but we shall log them regardless (just like Big Brother would want)
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //set start time
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //set shutdown hook
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //start session logger
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //CyderSetup subroutines
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //possibly fatal subroutines
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //launch splash screen
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //IOUtil necessary subroutines to complete with success before continuing
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //IOUtil secondary subroutines that can be executed when program has started essentially
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //start GUI exiting failsafe
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:         //offship how to login to the LoginHandler since all subroutines finished
[13-37-01] [CONSOLE_OUT]: [STRING] Cyder:     //just to be safe
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * This is called from the shutdown hook, things imperitive to do
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * no matter what, before we close, System.exit has already been called here
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * so you shouldn't do any reading or writing to files or anything with locks/semaphores
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:         //delete temp dir
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * Initializes System.getProperty key/value pairs
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * Initializes UIManager.put key/value pairs. Call this method before
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * loading a frame if bypassing Cyder.java's main method.
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * Registers the fonts within the fonts/ directory. These fonts are then serialized into objects inside of consts.CyderFonts.
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * These fonts may ONLY be derived throughout the program. No other fonts may be used aside from the user selected font which
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * is guaranteed to work since we pull the list of fonts from the GraphicsEnvironment.
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:      * @return boolean informing whether or not all the fonts were loaded properly
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:             //loop through fonts dir
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:                 //if it's a valid font file
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSetup:                         //register the font so we can use it throughout Cyder
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSplash:                             //this has been going on for over a minute at this point if the program reaches here
[13-37-01] [CONSOLE_OUT]: [STRING] CyderSplash:                             // clearly something is wrong so exit
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:     //private constructor
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:     //sems
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:     //frame checking as a failsafe
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:     //preferences used for user
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:         // IGNORE for display name means ignore for UserEditor,
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:         // IGNORE for tooltip means don't write when creating user since it was already set
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:         //adding future prefs: you'll need to add the preference here and also the data in user.java
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:         // since gson parses the userdata.json into a user object.
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:         // some rare cases might require deeper manipulation such as the case for executables
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:      * Controled program exit that calls System.exit which will also invoke the shutdown hook
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:      * @param code the exiting code to describe why the program exited (0 is standard
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:      *             but for this program, the key/value pairs in Sys.json are followed)
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:             //acquire and release sems to ensure no IO is currently underway
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:             //sign out user if ConsoleFrame has a user associated with it
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:             //log exit
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:         //other possibly dominant/stand-alone frame checks here
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:     //generic booleans
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:     //start time for logging
[13-37-01] [CONSOLE_OUT]: [STRING] GenesisShare:     //inner classes
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer: //todo this is just all around fucked,
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer: // opening when already open doesn't work
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer: // and moving around the audio doesn't work either
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:     //ui components
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:     //audio booleans
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:     //audio list
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:     //album art
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:     //JLayer objects
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:     //resuming/audio stat vars
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Constructor that launches the AudioPlayer
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @param startPlaying the audio file to start playing upon successful launch of the AudioPlayer.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      *                     Pass {@code null} to avoid starting audio upon launch.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Adds the given file to the queue. If the player is not open, then it plays the requested audio.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @param f the audio to play
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Returns the associated JLayer player
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Determines whether or not the audio widget is currently playing audio.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * If player is closed, then player is set to null so this will always work.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @return returns whether or not any AUDIO is playing via AudioPlayer
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Returns whether or not any audio has been paused. This is indicated via
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      *  a value other than 0 for pauseLocaiton.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @return whether or not any audio is paused
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Returns whether or not the audioplayer widget is currently open
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @return if AudioPlayer is open
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Refreshes the {@code Port.Info.SPEAKER} or {@code Port.Info.HEADPHONE} volume.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Refreshes the audio list and the audio index incase files were added to the directory.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * When starting pass the file that the user selected using the select audio directory button.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * On refresh, you may pass null and the program will infer where to look based on the current audioFile dir.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Pauses the audio if anything is currently playing in preparation to resume at the current location.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Stops the audio and all threads in their tracks.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Skips to the current audio file's predecesor if it exists in the directory.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Skips to the current audio file's successor if it exists in the directory.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Kills all threads and resets all variables to their defaults before invoking dispose on the audio frame.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:         //player ending calls
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:         //scrolllabel ending calls
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:         //location progress bar ending calls
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:         //null sets
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:         //default stes
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:         //exiting widget
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Starts playing audio from the current index.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                 //these occasionally throws NullPtrExep if the user spams buttons so we'll ignore that
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                 //album art if possible
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                 //on spam of skip button, music player hangs for about 10 seconds
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                 // and throws an error then catches up eventually
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                 //we end up here if player is ended
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                     //paused/stopped for a reason so do nothing as of now
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                         //loop back around to the beginning as long as more than one song
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Resumes audio at the current audio file at the previously paused position.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Resumes audio at the current audio file at the passed in byte value.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @param startPosition the byte value to skip to when starting the audio
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                     //in case for some weird reason startPosition is before the file then we set startPosition to 0
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                     //these occasionally throws NullPtrExep if the user spams buttons so we'll ignore that
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                         //paused/stopped for a reason so do nothing as of now
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:                             //loop back around to the beginning
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * private inner class for the audio location slider
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * private inner class for the scrolling song label
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Sets the value of miniPlayer, the boolean determining whether the player is in smaller view or not.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @param b the boolean value of miniPlayer
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Standard getter for miniPlayer value.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @return miniPlayer value
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Sets the value for pinning the frame on top.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @param b the value determining whether or not the frame is always on top
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Standard getter for pinned boolean.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @return the boolean of pinned
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Sets the AudioPlayer to mini mode.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Exits mini mode if the player is in mini mode.
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Get's the total duration of an audio file
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @param audioFile the provided audio file
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @return the time in ms that it takes to comlete the audio file
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Adds the provided audio file to the queue
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @param f the audio file to play when all the other songs in the queue are finished
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * Refreshes the currentAlbumArt ImageIcon based on the current audio at audioIndex if
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * an album art file exists with the same name as the audio file
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:      * @return boolean describing whether or not album art exists
[13-37-01] [CONSOLE_OUT]: [STRING] AudioPlayer:             //for all the album arts
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:     //all ui elements
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:     //corresponding lists
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:     //stacks for traversal
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:     //where we currently are
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:     //private constructor since static
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:     //as per standard, method
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //if a frame is already open, close it
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //frame setup
[13-37-01] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //field setup
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //last setup
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:             //we may only go back if there's something in the back and it's different from where we are now
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:                 //traversing so push where we are to forward
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:                 //get where we're going
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:                 //now simply refresh based on currentDir
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //next setup
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:             //only traverse forward if the stack is not empty and forward is different from where we are
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:                 //push where we are
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:                 //figure out where we need to go
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:                 //refresh based on where we should go
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //files scroll list setup
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //adding things to the list and setting up actions for what to do when an element is clicked
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //generate the scroll label
[13-37-02] [CONSOLE_OUT]: [STRING] DirectoryViewer:         //final frame setup
[13-37-02] [CONSOLE_OUT]: [STRING] PhotoViewer:     //start instance
[13-37-02] [CONSOLE_OUT]: [STRING] PhotoViewer:     //returns a scaled down imageicon if the image file is too big
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * This method takes an exception, prints it to a string, and then passes the
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * error to the SessionLogger to be logged
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * @param e the exception we are handling and possibly informing the user of
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:         //always print to the IDE console, this saves time in the long run
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:             //obtain a String object of the error and the line number
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:             //get our master string and write it to the
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:             //if the user has show errors configured, then we open the file
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:         //uh oh; error was thrown inside of here so we'll just generic inform the user of it
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * This method handles an exception the same way as {@link ErrorHandler#handle(Exception)} (String)}
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * except it does so without informing the user/developer/etc.
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * @param e the exception to be silently handled
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:             //obtain a String object of the error and the line number
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:             //get our master string and write it to the
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * Handles the exception by displaying a CyderFrame with the exception on it
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * (does not log the message. As such, this method should only be used in rare scenarios)
[13-37-02] [CONSOLE_OUT]: [STRING] ErrorHandler:      * @param e the exception to be displayed
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //handle methods ----------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //check for null link
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //init String vars
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //log CLIENT input
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //pre-process checks --------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //printing strings ----------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //printing imageicons -------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //threads -------------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //widgets -------------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //ui and settings -----------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //program outsourcing ------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //playing audio -------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //console commands ----------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                     * 0.587 + backgroundDom.getBlue() * 0.114) > 186) {
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                             //wait for all music to be downloaded
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                                 //play the songs
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                                 //play the song
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //final attempt at unknown input --------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                 //inform of valid tests in case they were trying to call a test
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //checks to see if a preference id was entered and if so, toggles it
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * Prints a suggestion as to what the user should do
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * Getter for this instance's input mode
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * @return the value of user input mode
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * Set the value of secondary input mode
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * @param b the value of input mode
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * Returns the expected secondary input description
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * @return the input description
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * Sets this instance's secondary input description
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * @param s the description of the input we expect to receive next
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //printing queue methods and logic ----------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //use this for adding/removing to/from both lists
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //don't ever add to these lists, call the respective print functions and let them
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     // handle adding them to the lists
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //lists declared anonymously to allow for their add methods to be overridden
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     // allowing for semaphore usage
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //console printing animation currently turned off do to concurrency issues such as
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     // bletchy, YouTube thread, and drawing pictures and such, maybe we just throw everything no matter
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     // what into a custom OutputQueue and from there determine how to store it and print it?
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                     //update typingAnimationLocal every 3 seconds to reduce resource usage
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                     //regular will perform a typing animation on strings if no method
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                     // is currently running, such as random youtube or bletchy, that would cause
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                     // concurrency issues
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:                         //fix possible escape from last command
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //print lines method
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //repeat above methods but for priority queue should an object need quick printing
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //string comparison methods -----------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //direct JTextPane manipulation methods -----------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * Removes the last "thing" addeed to the JTextPane whether it's a component,
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      *  icon, or string of multi-llined text.
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      *  In more detail, this method figures out what it'll be removing and then determines how many calls
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      *   are needed to {@link StringUtil#removeLastLine()}
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      * Removes the last line added to the linked JTextPane. This could appear to remove nothing,
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:      *  but really be removing just a newline (line break) character.
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:     //control flow handlers ---------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //exit user input mode if in it
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //kill YouTube threads
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //kill bletchy threads
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //kill system threads
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //stop music
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //cancel dancing threads
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //finish printing anything in printing queue
[13-37-02] [CONSOLE_OUT]: [STRING] InputHandler:         //inform user we escaped
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:     //Login widget --------------------------------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:         //apparently we need it a second time to fix a bug :/
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                     //reset caret pos
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                     //if it doesn't start with bash string, reset it to start with bashString if it's not mode 2
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:         //close handling
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:         //exiting handler if console frame isn't active
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                         //copy input to new input with offset
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:             //holding shift allows the user to see their password
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:         //in case this is after a corruption or logout, start frame checker again
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:     //login handling methods ------------------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * Begins the login sequence to figure out how to enter Cyder. Autocyphers all the autocyphers if enabled
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * and autocyphers exist. Otherwise if the program is released show the login widget. Any failures will lead
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * to the login widget showing up no matter what and the program will only exit
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:         //figure out how to enter program
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * Attempts to log in a user based on the inputed name and already hashed password
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * @param name the provided user account name
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * @param hashedPass the password already having been hashed (we hash it again in checkPassword method)
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * @return whether or not the name and pass combo was authenticated and logged in
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:             //fix login field if the frame is still open
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:             //check password will set the console frame uuid if it finds a userdata.json that matches the provided name and hash
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //if they're already logged in
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                     //idk how this would be possible but sure
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                     //log out all people as a precaution
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                     //this is the only time loggedin is EVER set to 1
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //set ret var
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //stop login animations
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //log the success login
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //reset console frame if it's already open
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //open the console frame
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //dispose login frame now to avoid final frame disposed checker seeing that there are no frames
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 // and exiting the program when we have just logged in
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                     //rest autocypher
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * Used for debugging, automatically logs the developer in if their account exists,
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:      * otherwise the program continues as normal
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:             //for all cypher hashes, attempt to log in using one
[13-37-02] [CONSOLE_OUT]: [STRING] LoginHandler:                 //if the login works, stop trying hashes
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:     //absolute start of Cyder, class loading
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * The main log method to log an action associated with a type tag.
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @param tag the type of data we are logging
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @param representation the representation of the object
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @param <T> the object instance of representation
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //user inputs to the console
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //jcomponent print outs
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //other console print outs
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //any exceptions thrown are passed from errorhandler to here
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //files opened, links opened
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //userdata read or write
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[CLIENT_IO]: [SET] [KEY] NAME [VALUE] NATHAN
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[CLIENT_IO]: [GET] [KEY] VERSION [RETURN VALUE] 9.2.21
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //systemdata read or write
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[SYSTEM_IO]: [SET] [KEY] VERSION [VALUE] SOULTREE
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[SYSTEM_IO]: [GET] [KEY] VERSION [RETURN VALUE] 9.2.21
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //user logged in using recognize method
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[LOGIN]: [NATHAN] Autocyphered (STD Login)
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[LOGOUT]: [NATHAN]
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[JAVA ARGS]: (possible args) [LOCATION] New Orleans, LA
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[ENTRY]: [WINUSER=NATHAN]
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //right before genesisshare.exit exits
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[EXIT]: [RUNTIME] 1h 24m 31s
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //end log
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //write
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //exit using the exit code right after logging it
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //before user corruption method is called
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[CORRUPTION]: [FILE] c:/users/nathan/downloads/CyderCorruptedUserData.zip
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[PRIVATE MESSAGE]: [RECEIVED FROM SAM (UUID here)] Check discord.
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:                 //[UNKNOWN]: CyderString.instance really anything that doesn't get caught above
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * Attempt to figure out what Tag representation should be and log it.
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @param representation the object we are trying to log
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @param <T> any object
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * Constructor that accepts a file in case we want to use a different file.
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @param outputFile the file to write the log to
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * Constructor for the logger to create a file and write to for the current session.
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:         //create the log file
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * Getter for current log file
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @return the log file associated with the current session
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * Creates the log file if it is not set/DNE
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @return whether or not the file was created successfully
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * Writes the line to the current log file and releases resources once done.
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @param line the single line to write
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:             //if the current log doesn't exist, find a unique file name and make it
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:             //otherwise just write to the current log file
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * Counts the exceptions in the current log folder. This is used when closing the log to provide
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      *  an exceptions summary.
[13-37-02] [CONSOLE_OUT]: [STRING] SessionHandler:      * @return the int number of exceptions thrown in this Cyder session
[13-37-02] [CONSOLE_OUT]: [STRING] CyderBaseLayout:     //no implementation required, this looks better than extending JLabel and this also forces
[13-37-02] [CONSOLE_OUT]: [STRING] CyderBaseLayout:     // CyderLayouts to implement the base required methods for layout managing.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:     //used for where to position components/how to position them when overflow occurs
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         //partition width into how many grid spaces we have
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         //partition height into how many grid spaces we have
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         //now accounting for offsets we can draw our components using the bounds provided
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         // components themselves take care of their own insets by being smaller than the
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         // partitioned area they're given or be placed on a label to be used as spacing
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         // and then passed to the GridLayout
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                 //base case of no component is at this position
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                 //focus tracking
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                 //if an instance of a CyderPanel give it all the space possible
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                     //recursive call here for revalidating all sub panels
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                 //if it doesn't fit in bounds then give it as much space as possible
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //only one might be over the max len so take the min of partition and len
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                     //fits in bounds of designated space so center it
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                     //we know it fits so use math to figure out how to add/sub from/to addX and addY
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //move up and to the left
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //move up
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //move up and right
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //move left
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //relative to origin so nothing done here
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             // move right
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //move down and left
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //move down
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:                             //move down and right
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         //request focus to original owner
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * Adds the provided component to the grid at the first available space
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * @param component the component to add to the grid if possible
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * @return whether or not the component was added successfully
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * Adds the provided component to the grid at the first available space
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * @param component the component to add to the grid if possible
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * @param sectionPosition the position to set the component to if it fits
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * in the partitioned space or how to position the component should it overflow the partitioned space
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:      * @return whether or not the component was added successfully
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:             //component already here, figure out how to handle this case
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:             //component already here, figure out how to handle this case
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         //no component there
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:         //found component so remove and return true
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:     //standard
[13-37-02] [CONSOLE_OUT]: [STRING] CyderGridLayout:     //class so we know the original size of components for resize events
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:  * This interface shouldn't be directly used. For custom CyderLayouts simply extend the CyderBaseLayout
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:  * which also forces the class to implement this interface
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:     //NOTE: ALL LAYOUTS SHOULD OVERRIDE THE PAINT METHOD AND CALCULATE HOW TO
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:     // POSITION THE COMPONENTS THERE
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:     //of course there will be more complex add and remove component methods but
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:     // these are the base ones that should always exist
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:     //method to recalculate bounds of components on the panel
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:     //so that the layout can manage components directly on the panel and not itself
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLayout:     //repaint should always be overridden to revalidate the bounds of components
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend: //a client instance may exist without a connection
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //default TOR port
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //consts
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //SERVER TO ESTABLISH CONNECTION AFTER HANDSHAKES
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //our server socket that receives connection requests
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //the server we're connected to that we will send data to
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //GENERAL DATA
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //our name, uuid, and frame
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //connected uuid and name
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:     //handshake data to listen for to make sure the IP we want to connect to is the one we connect to
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * Default constructor for client, sets up our socket and our writer
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * @param clientUUID our client's uuid
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * @param clientName our client's name
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * @param messagingWidgetFrame the CyderFrame this Client should be associated with to be used for the confirmation window
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //setups
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //todo this should start on login and end stuff on logout, static server to handle multiple connections
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //start our server to listen for connections
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * Starts listening for clients wanting to connect to us, this is ran as soon as a dm window is opened
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:         //blocking method so server is in it's own thread
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                 //initialize our socket which uses our IP
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                 //we exit this while loop when Cyder exits,
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //accept a connection to check if it's who we want to connect to
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //make a reader to receive data coming from this new connection
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //make a writer to send data to this new connection
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //get the handshake data
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //get name and uuid from unknown client
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //if the handshake is what we sent out, they're who we requested to connect to
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //handhake hash being null means we're trying to be connected to,
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     // not null means we tried to connect to foreign server already and now are
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     // receiving a return that may or may not be them
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //setup the reader so that we can receive more messages from this client
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //setup the writer so we can send messages to this client
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //set received name and uuid data to our global vars
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //start listening for their messages
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //log connection
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //todo we're going to use the above reader and writer now
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //we requested, they accepted and returned, now both of us may start the chat window
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //we already started the chat window so we need to return that a connection was successful and print
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         // that to our user's window. The other client should have popped into a chat window already
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         // since they had to accept our invite
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //if it's a NACK, the other party denied the request
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //todo this isn't working, does returning even work in this method?
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //if the hash is not set or does not match, then it's someone new trying to connect
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             //setup socket and vars since we're choosing to connect to them officially
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             //send over data, now it's up to their server to connect to us as well
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             //listen for their messages assumping their server still wants to connect
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             //close socket since we'll launch an offial one with the provided socket
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             //todo
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             //pop into our own chat window, if they still want to connect we'll listen for a special message that we're about
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             // to send. If they send it back then the connection is secure and ready for our clients to communicate now
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                             //send a NACK so that the user doesn't hang around waiting for us
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * Writes a string to our client's socket's buffered writer
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * @param message the string to write
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //write message using their socket's writer that their listenToClient method will receive
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * Called once when this client instance launches
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //while connection to a client is established
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                     //read from the connected client, this is a blocking method
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //instead of printing, append to frame's outputarea
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:                         //("[" + connectedClientName + "]: " + receivedMessage);
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:         //this method spins off after we've established a connection and completed handshakes
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:         // so it's safe to start the thread and name it using their clientName
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * Attempts to connect to a client. We're given an IP to try and connect to
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * so we set a message to the IP with our handshake data, uuid, and our name
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * @param ip the provided ip to attempt to connect to (their server)
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //initialize connection to server via provided ip
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //buffered writer to send handshake and other needed data
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //we're trying to connect to them so give them some data
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //send handshake
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //send our uuid and name
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //flush and close stream
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //log
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * Terminates the connection that this Client has with another
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:      * Client and informs that client that we have disconnected
[13-37-02] [CONSOLE_OUT]: [STRING] ClientBackend:             //if there's a connection
[13-37-02] [CONSOLE_OUT]: [STRING] ClientHandshake:                 //todo instead of notifying, pop into a waiting lobby frame that will exit if the other client denies it or timesout
[13-37-02] [CONSOLE_OUT]: [STRING] ClientHandshake:                 // this should be a completely separate chat window
[13-37-02] [CONSOLE_OUT]: [STRING] ClientHandshake:         //startup our client so that we can receive request and send requests
[13-37-02] [CONSOLE_OUT]: [STRING] ClientView: //todo consolidate lines if they're duplicates except for timestamp, override timestamp with current one and add x2,x3... etc.
[13-37-02] [CONSOLE_OUT]: [STRING] ClientView:     //dm view similar to ConsoleFrame, should support images, files, and text
[13-37-02] [CONSOLE_OUT]: [STRING] ClientView:     //this class is not static due to being able to DM multiple users at once in different frames
[13-37-02] [CONSOLE_OUT]: [STRING] ClientView:      * Volatile method to open the window
[13-37-02] [CONSOLE_OUT]: [STRING] ClientView:                 //todo set bounds of input and output
[13-37-02] [CONSOLE_OUT]: [STRING] ClientView:         //output area
[13-37-02] [CONSOLE_OUT]: [STRING] ClientView:         //input field
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Standard getter for the current size of this heap
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @return the heap size
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Initializes the heap structure with an initial data point and a maximum allowable size.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param data the initial data of the heap
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param maxSize the maximum allowable size of this heap instance
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Initializes the heap structure with default data and the maximum allowable size of this instance of CyderHeap.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param data the data to populate the first "data.length" slots wit
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param maxSize the maximu allowable size of this heap instance
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Finds the left child index of the node at the provided index.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param position the index of the parent to find the left child of
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @return the index of the left child
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Finds the right child index of the node at the provided index.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param position the index of the parent to find the right child of
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @return the index of the right child
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Finds the index of the parent of the node at the provided index.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param position the index to find the parent of
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @return the index of the parent
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Determins if the node at the given index is a leaf, leafs have no children.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param position the position of the node
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @return whether or not the provided index node was a leaf
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:         //if it's greater than the size/2 and the position is still less than the size of our heap
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Swaps the two elements at the provided indicies
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param index1 the first index
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param index2 the second index
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Inserts the provided object into the back of the heap
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param data the object to insert
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Removes the root from the heap as is the point of a heap data structure.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Returns a string representation of the CyderHeap data structure.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @return the string representation promised
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Standard getter for the current maximum allowable size of the heap structure
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @return the currently set max size of the heap structure
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * Sets a new max size for the heap. Any elements outside of the inclusive range [0, maxSize] will be lost forever.
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:      * @param maxSize the new maximum size of the heap
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:         //set new size
[13-37-02] [CONSOLE_OUT]: [STRING] CyderHeap:         //propogate changes by changing the array length
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:             //removing front and setting it's next's previous to null
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:                 //has a next
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:                 //no next so removing means empty queue
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:             //removing back, and setting it's previous' next to null
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:                 //has a previous
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:                 //no previous so removing means empty queue
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:             //remove node and set it's previous's next to it's next
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:             // also set it's next's previous to it's own previous
[13-37-02] [CONSOLE_OUT]: [STRING] CyderLinkedList:             //not front and not back here so we should have at least 3 elements in queue
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:     //null constructor
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:     //initial data constructor
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:             //removing front and setting it's next's previous to null
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:                 //has a next
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:                 //no next so removing means empty queue
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:             //removing back, and setting it's previous' next to null
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:                 //has a previous
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:                 //no previous so removing means empty queue
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:             //remove node and set it's previous's next to it's next
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:             // also set it's next's previous to it's own previous
[13-37-02] [CONSOLE_OUT]: [STRING] CyderQueue:             //not front and not back here so we should have at least 3 elements in queue
[13-37-02] [CONSOLE_OUT]: [STRING] CyderStack:     //null constructgor
[13-37-02] [CONSOLE_OUT]: [STRING] CyderStack:     //initial data constructor
[13-37-02] [CONSOLE_OUT]: [STRING] CyderStack:     //pop removes and returns top value
[13-37-02] [CONSOLE_OUT]: [STRING] CyderStack:     //peek method returns top value
[13-37-02] [CONSOLE_OUT]: [STRING] CyderStack:     //isEmpty method
[13-37-02] [CONSOLE_OUT]: [STRING] CyderStack:     //print contents in order
[13-37-02] [CONSOLE_OUT]: [STRING] CyderStack:     //node class to be used
[13-37-02] [CONSOLE_OUT]: [STRING] Debug:     //here incase we close the window so we can open it back up and be in the same place
[13-37-02] [CONSOLE_OUT]: [STRING] Debug:         //this should be the only System.out.print call in the whole program
[13-37-02] [CONSOLE_OUT]: [STRING] Debug:         //log the debug print (this is why you should debug print from here)
[13-37-02] [CONSOLE_OUT]: [STRING] Debug:         //add new line to lines
[13-37-02] [CONSOLE_OUT]: [STRING] Debug:             //append everything needed to frame
[13-37-02] [CONSOLE_OUT]: [STRING] Debug:             //just acquired sem so make sure that it isn't already open again
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:     //this was used on 7-1-21 to verify adding/removing buttons to/from drag labels
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //pop data notify
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //push data
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //isEmpty notify
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //stack size
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //enqueue
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //dequeue
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //add first field
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //remove last button
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //forward traversal button
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //reverse traversal button
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //fill content area with label
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //fast timeout and relatively high char count
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //enable rippling
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //regular frame calls
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //init the main panel layout
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //add components to the layout at specified position
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //sub grid
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //make sub panel and set layout as sub grid
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //create master panel with the layout we have added components to
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //set the frame's content panel
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //resizing on
[13-37-02] [CONSOLE_OUT]: [STRING] ManualTests:         //regular final frame calls
[13-37-02] [CONSOLE_OUT]: [STRING] UnitTests:         //cardinal directions and +/1 1, +/1 0.1
[13-37-02] [CONSOLE_OUT]: [STRING] UnitTests:         //east
[13-37-02] [CONSOLE_OUT]: [STRING] UnitTests:         //north
[13-37-02] [CONSOLE_OUT]: [STRING] UnitTests:         //west
[13-37-02] [CONSOLE_OUT]: [STRING] UnitTests:         //south
[13-37-02] [CONSOLE_OUT]: [STRING] UnitTests:         //half angles
[13-37-02] [CONSOLE_OUT]: [STRING] UnitTests:         //technically this line contains a comment but it iself is not a comment
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * Class instantiation requires a JTextPane so that we may use a StringUtil to append to the profvided JTextPane
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param outputArea the JTextPane belonging to a ConsoleFrame to print to
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * Invoke the bletchy decode animtion with the following  parameters.
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param decodeString the final string to decode and display after the bletchy animation has finished
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param useNumbers a boolean depicting whether or not to use numbers in the alphabetic characters for the animation
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param miliDelay the milisecond delay in between animation frames
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param useUnicode a boolean depicting whether or not to use more than just latin letters and possibly numbers
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * Kills any and all bletchy printing threads
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * Returns an array of strings abiding by the parameters for a bletchy thread to print out
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param decodeString the string to decode
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param useNumbers a boolean turning on number usage
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @param useUnicode a boolean turning on random unicode chars
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:      * @return the string array to be used by a bletchy thread
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:             //card suites
[13-37-02] [CONSOLE_OUT]: [STRING] BletchyThread:             //cool looking unicode chars
[13-37-02] [CONSOLE_OUT]: [STRING] MasterYoutubeThread:     //this class still exists in the event we want to allow multithreading once again with random youtube
[13-37-02] [CONSOLE_OUT]: [STRING] MasterYoutubeThread:     // that will be hard to figure out due to the nature of threads, context switching, and just the general way
[13-37-02] [CONSOLE_OUT]: [STRING] MasterYoutubeThread:     // processors and operating systems work D:
[13-37-02] [CONSOLE_OUT]: [STRING] MasterYoutubeThread:     //should be associated with an input handler
[13-37-02] [CONSOLE_OUT]: [STRING] MasterYoutubeThread:     //should be in MasterYoutube class
[13-37-02] [CONSOLE_OUT]: [STRING] MasterYoutubeThread:     //this will always be 1 as of right now
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:                     //invalid UUID so we ingnore and increment the UUID here to ensure we checked it
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:                         //accTime is avg time, this is what we will divide the remaining UUIDs by
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:                         //array to work backwards through
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:                         //subtract completed UUIDS from this
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:         //init ret array
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:         //get the character at the position we ant
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:         //is it equal to the last in the master list of chars?
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:             //use recursion to add to next column
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:             //find the char's position in the master list of chars
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:             //add to index
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:             //set charac equal to new char
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:             //sub in charac in array
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:             //if rolling to new column, reset this column
[13-37-02] [CONSOLE_OUT]: [STRING] YoutubeThread:      * Kills the YouTube thread and writes the last checked UUID to system data
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //the one and only console frame method
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //instantiation only available from within this class
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //program driver
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //ui elements
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //music controls panel
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //debug ui elements
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //boolean vars
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //background vars
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //string and font vars
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //debug vars
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //command scrolling
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //directional enums
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //threads to end/start for different users
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //clickable menu items
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //set bashstring based on cyder username
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //line color depends on the current image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //init slide and dir directions
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //new op list and scrolling index
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //special boolean vars
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //menu items
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //handle random background by setting a random background index
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //get proper width, height, and background image icon,
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             // we take into account console rotation and fullscreen here
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //anonymous class
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set pane component bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //menu label bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //audio menu bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //after closing the frame exit the program is typical function
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //set background to non-navy color
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //this has to be here since we need consoleCyderFrame to not be null
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //on minimize / reopen end/start threads for optimization
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //on launch, request input field focus and run onLaunch() method
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //we should always be using controlled exits so this is why we use DO_NOTHING_ON_CLOSE
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //set contentpane tooltip
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //init input handler
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //start printing queue for input handler
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //output area settings complete; starting input field
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //input field key listeners such as escaping and console rotations
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //escaping
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //direction switching
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //bashstring checker
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //a bodge to update the caret position if it goes before an allowed index for console bash string
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //if caret position is before the bash string
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //if it doesn't start with bash string, reset it to start with it
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //calls to linked inputhandler
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //instantiate enter listener for all buttons
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //make a feature to make a put request to a cyder backend server to accept these
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //custom list of buttons even for mini and close so that we can focus traverse them
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //set top drag's button list and others to none
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //audio controls
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //this turns into setting a center title
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //bounds not needed to be set since the executor service handles that
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //add listeners for pinned window functon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //this should figure out what frames we need to move during hte current drag event
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //spin off console executors
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //close all non-CyderFrames
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //pin console if needed
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //close all frames just before showing console
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //show frame
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //inform and log how long it took to load Console from program start
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //position window from last location if in bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //resume frame checker
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //internet connection checker
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //sleep 5 minutes
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //hourly Chime Checker
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //sleep 60 minutes
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //Console Clock Updater
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //sleep 500 ms
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //sometimes this throws for no reason trying to get times or something so log quietly
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //Cyder Busy Checker
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //sleep 3 seconds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //initial delay
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //sleep 5000 ms
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //one time run things such as notifying due to special days, debug properties,
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     // last start time, and auto testing
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //special day events
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //preference handlers here
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //testing mode
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //last start time operations
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //Bad Apple / Beetlejuice / Michael Jackson reference for a grayscale image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Invokes the method with the name holiday + year from the CardsWidget
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param holiday the holiday name such as Christmas
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param year the year of the holiday such as 2021
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //don't reflect if in testing mode
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //plays intro music if the user has the preference selected, otherwise, plays the default startup sound
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //adding components
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //mapped executables
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //default menu items
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //set menu location to top
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //adding components
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //mapped executables
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //default menu items
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //set menu location to top
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //draw 5 high line 150 width across
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //command scrolling
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //scroll to previous commands
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //scroll to subsequent command if exist
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //f17 Easter egg and other acknowlegement of other function keys
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Set the UUID for this Cyder session. Everything else relies on this being set and not null.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Once set, a one time check is performed to fix any possibly corrupted userdata.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param uuid the user uuid that we will use to determine our output dir and other
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      *             information specific to this instance of the console frame
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Sets the OutputArea and InputField font style for the current user
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param combStyle use Font.BOLD and Font.Italic to set the user
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      *                  font style. You may pass combinations of font
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      *                  styling using the addition operator
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Sets the font size for the user to be used when {@link ConsoleFrame#getUserFont()} is called.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param size the size of the font
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Get the desired user font in combination with the set font metric and font size.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @return the font to use for the input and output areas
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Get the user's foreground color from Userdata
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @return a Color object representing the chosen foreground
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Get the user's background color from Userdata
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @return a Color object representing the chosen background
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Takes into account the dpi scaling value and checks all the backgrounds in the user's
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * directory against the current monitor's resolution. If any width or height of a background file
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * exceeds the monitor's width or height. We resize until it doesn't. We also check to make sure the background
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * meets our minimum pixel dimension parameters. The old images are automatically resized and replaced with the
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * properly resized and cropped images.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //inform the user we are changing the size of the image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //if the image doesn't need a resize then continue to the next image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //save the modified image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //reinit backgrounds after resizing all backgrounds that needed fixing
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //if no backgrounds, copy the default image icon over and recall initBackgrounds()
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //get the dimensions which we will flip to, the next image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //are we full screened and are we rotated?
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //if full screen then get full screen images
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //when switching backgrounds, we ignore rotation if in full screen because it is impossible
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //not full screen and oriented left
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                 //not full screen and oriented right
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //make master image to set to background and slide
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //before combining images, we need to resize to the new width and height
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //we only need to resize our new image in the event of a full screen or rotation event
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //update frame bounds and set location relative to old center
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //icon to set as the background after sliding animation completes
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //get combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane bounds to hold combined image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //animate the image up
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //disable dragging to avoid random repaints
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set proper location for complete animation
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reanble dragging
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset content pane bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset the icon to the new one without combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //refresh the background
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set our last slide direction
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //get combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane bounds to hold combined image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //animate the image up
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //disable dragging to avoid random repaints
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set proper location for complete animation
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reanble dragging
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset content pane bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset the icon to the new one without combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //refresh the background
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set our last slide direction
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //get combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane bounds to hold combined image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //animate the image up
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //disable dragging to avoid random repaints
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set proper location for complete animation
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reanble dragging
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset content pane bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset the icon to the new one without combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //refresh the background
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set our last slide direction
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //get combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane bounds to hold combined image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //set content pane image
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                     //animate the image up
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //disable dragging to avoid random repaints
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set proper location for complete animation
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reanble dragging
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset content pane bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //reset the icon to the new one without combined icon
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //refresh the background
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:                         //set our last slide direction
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //increment background index
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //change tooltip to new image name
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //update line color
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //set input and output bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //request focus
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //fix menu
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //fix foreground if needed
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //fix frame out of bounds if needed
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @return returns the current background with using the current background ImageIcon and regardless of whether full screen is active
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @return returns the current background height using the current background ImageIcon and regardless of whether full screen is active
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Smoothly transitions the background icon to the specified degrees.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Use set console direction for console flipping and not this.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param deg the degree by which to smoothly rotate
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Repaints the ConsoleFrame based on the console flip diretion and regardless of whether fullscreen is turned on.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Use this method as a repaint essentially.
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param enable the fullscreen value of the frame
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //output border
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //input border
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //full screen
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //console clock
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //output color fill
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //input color fill
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //round corners fixer
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Figures out the index of where the current background is in case some files in that
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * directory were deleted/added. We cannot rely on the current background file or index
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Revalidates the console menu and places it where it was depending on if it was visible or not
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //if the frame is closed or the label simply doesn't exis
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:             //no other actions needed
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //based on console menu, set bounds of fields
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //offset for setting field bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //set bounds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Simply removes the audio controls, no questions asked
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Sets the console frame to a provided ScreenPosition and moves any pinned CyderFrame windows with it
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * @param screenPos the screen position to move the ConsoleFrame to
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //returns all frames pinned to the ConsoleFrame
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //the user set time
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //no custom pattern so take into account showSeconds
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //save window location
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //stop any audio
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //close the input handler
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //logs
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //remove closing actions
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //dispose and set closed var as true
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //close the consoleframe if it's still open
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //close all residual cyderframes
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //dancing stuff -----------------------------------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Invokes dance in a synchronous way on all CyderFrame instances
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //anonymous inner class
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //list of frames for restoration purposes
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //add frame's to list for restoration coords and dragging restoration
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //set var to true so we can terminate dancing
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //invoke dance step on all threads which currently dancing is true and all frames are not in the finished state
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //reset frame's locations and dragging vars
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:      * Ends the dancing sequence if on-going
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //end dancing sequence
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:         //reset all frames to dance again
[13-37-02] [CONSOLE_OUT]: [STRING] ConsoleFrame:     //end dancing stuff -------------------------------------------------------------------
[13-37-02] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //move enter check down
[13-37-02] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //thickness of line drawn
[13-37-02] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //length from center to bottom most check point
[13-37-02] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //length from bottom most part back up
[13-37-02] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //move enter check down
[13-37-02] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //thickness of line drawn
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //length from center to bottom most check point
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckbox:                 //length from bottom most part back up
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:         //constructor to allow object creation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * Sets the currently selected box in this group to not selected
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * Adds the given checkbox to the group
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * @param box the checkbox to add
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * removes the provided checkbox from the group
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * @param box the box to remove from the group
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * Sets the provided checkbox within the group to be selected
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * @param box the checkbox to set as selected
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * Finds the currently selected checkbox within this button group
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * @return the currently selected checkbox
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * Finds how many buttons are associated with this button group
[13-37-03] [CONSOLE_OUT]: [STRING] CyderCheckboxGroup:      * @return the number of checkboxes in this button group
[13-37-03] [CONSOLE_OUT]: [STRING] CyderConstrainedLabel:     //strips away any existing html and adds in the width or height constraints
[13-37-03] [CONSOLE_OUT]: [STRING] CyderConstrainedLabel:     //zero indicates any value needed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderConstrainedLabel:      * Sets the color, font, and alignment defaults
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //threads belonging to this instance: notification queuer and dance thread may be ctrl + c'd away
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //upon disposing this will be set to true so the inner content pane is not repainted to speed up any animations
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //the background color of our curent pane (not the icon pane image/color)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //clearly
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //determines area of resizing trigger area vs dragging area (5px total)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //used for a constructor
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * returns an instance of a cyderframe which extends JFrame with the specified width and height
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * and a drag label with minimize and close buttons
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * the specified ImageIcon is used for the background (you can enable resizing and rescaling of the image should you choose)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param width the specified width of the cyder frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param height the specified height of the cyder frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param background the specified background image. You can choose to leave the image in the same place upon
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      *                   frame resizing events or you can configure the frame instance to rescale the original background
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      *                   image to fit to the new frame dimensions.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //border color for consoleframe menu pane set in instantiation of object
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //this . methods
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //try and get preference for frame shape
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //listener to ensure the close button was always pressed which ensures
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         // things like closeAnimation are always performed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //master contentlabel
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //adding pane (getContentPane().add(component))
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //as long as we should repaint, repaint it
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //if there's a panel we need to extend its bounds too
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //top frame drag
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //left frame drag
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //right frame drag
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //bottom frame drag
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //title label on drag label
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //default boolean values
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //frame type handling
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Makes a borderless frame with no drag labels, the content label itself can move the frame.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * This frame, however, can never exist as any other state,
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Constructs this CyderFrame object as a CyderFrame that exists without
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * surrounding drag labels, the title label, and the button list.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param borderlessID the integer ID of this frame instance
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param width the width of this CyderFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param height the height of this CyderFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //this . methods
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //listener to ensure the close button was always pressed which ensures
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         // things like closeAnimation are always performed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //master contentlabel
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //adding pane (getContentPane().add(component))
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //as long as we should repaint, repaint it
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //contentLabel drag listener for frame moving around
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //default boolean values
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Default constructor for CyderFrame using the DEFAULT_WIDTH and DEFAULT_HEIGHT for dimensions
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Default constructor for a CyderFrame object with specified width and height.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param width the specified width of the CyderFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param height the specified height of the CyderFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Default CyderFrame constructor for width, height, and content label color
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param width the width of the CyderFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param height the height of the CyderFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param c the color of the content pane background
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //end of constructorrs ----------------------------------------------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //CyderPanel and CyderLayout stuff ---------------------------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Adds the provided CyderPanel on top of the content pane to be resized on
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * CyderFrame resize events also.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param cyderPanel the CyderPanel with associated CyderLayout
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //removing a panel and setting it to null
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //panel literally sits on top of contentPane() (iconLabel in CyderFrame's case)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * This method will change the title position to the specified value. If the frame is visible to the user,
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * we will animate the change via a smooth slide transition
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param titlePosition the position for the title to be: left, center
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                     //left
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                     //set final bounds
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //right
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Getter for the title position
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return position representing the title position
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //remove minimize
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //remove pin
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //remove pin
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Determines whether or not to paint the default windows title. The CyderFrame label title is always painted.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param enable boolean variable of your chosen value for paintWindowTitle
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the value of paintWindowTitle which determines whether ot not the windows title is painted.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return boolean describing the value of paintWindowTitle
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Determines whether or not to paint the windowed title. The CyderFrame label title is always painted.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param enable boolean variable of your chosen value for paintSuperTitle
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the value of paintSuperTitle which determines whether ot not the windowed title is painted.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return boolean describing the value of paintSuperTitle
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Set the title of the label painted on the drag label of the CyderFrame instance. You can also configure the instance
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * to paint the windowed title as well.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param title the String representing the chosen CyderFrame title
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the minimum width required for the given String using notificationFont.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param title the text you want to determine the width of
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return an interger value determining the minimum width of a string of text (10 is added to avoid ... bug)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the minimum width required for the given String using the given font.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param title the text you want to determine the width of
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param f the font for the text
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return an interger value determining the minimum width of a string of text (10 is added to avoid ... bug)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the minimum width required for the given String using the given font without adding 10 to the result.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param title the text you want to determine the width of
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return an interger value determining the minimum width of a string of text
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the minimum height required for the given String using the given font.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param title the text you want to determine the height of
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return an interger value determining the minimum height of a string of text (10 is added to avoid ... bug)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the minimum height required for the given String using the given font without adding 10.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param title the text you want to determine the height of
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return an interger value determining the minimum height of a string of text
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * This method is to be used for a quick notify. view direction is five seconds
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param htmlText the text you want to notify on the callilng from
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * This method is to be used for a more controled notify. You may choose the duration and the arrow direction
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param htmltext the text you want to display (may include HTML tags)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param viewDuration time in ms that the notification should stay on screen
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param direction the enter and vanish direction for the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * This method is to be used for a more controled notify. You may choose the duration and the arrow direction
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param htmltext the text you want to display (may include HTML tags)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param viewDuration time in ms that the notification should stay on screen
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param direction the enter and vanish direction for the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param onKillAction the action to invoke upon user disposal of the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Full control over the notification function of a {@link CyderFrame}.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * See {@link CyderFrame#notify(String, int, NotificationDirection, ClickAction)} for a simpler notify function
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param htmltext the text you want to display (may include HTML tags)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param viewDuration the time in ms the notification should be visible for. Pass in 0
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      *                     to be auto calculated based on word count
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param arrowDir the direction of the arrow on the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param notificationDirection the enter/exit direction of the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Full control over the notification function of a {@link CyderFrame}.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * See {@link CyderFrame#notify(String, int, NotificationDirection, ClickAction)} for a simpler notify function
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param htmltext the text you want to display (may include HTML tags)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param viewDuration the time in ms the notification should be visible for. Pass in 0
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      *        to be auto calculated based on word count, pass in -1 to persist indefinitely until the user clicks
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param arrowDir the direction of the arrow on the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param notificationDirection the enter/exit direction of the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param container container to show on the notification instead of the typical text, pass null to ignore
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Full control over the notification function of a {@link CyderFrame}.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * See {@link CyderFrame#notify(String, int, NotificationDirection, ClickAction)} for a simpler notify function
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param htmltext the text you want to display (may include HTML tags)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param viewDuration the time in ms the notification should be visible for. Pass in 0
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      *        to be auto calculated based on word count, pass in -1 to persist indefinitely until the user clicks
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param arrowDir the direction of the arrow on the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param notificationDirection the enter/exit direction of the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param container container to show on the notification instead of the typical text, pass null to ignore
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param notificationBackground the color to set the notification background to. Pass null for default
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //make a WaitingNotification and add to queue, queue will automatically process any notifications so no further actions needed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                             //init notification object
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                             //set the arrow direction
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                             //create text label to go on top of notification label
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                                 //set the text bounds to the proper x,y and theest
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                                 // calculated width and height
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                                         //fire any on kill actions if it's not null
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                                         //smoothly animate notification away
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                                     //parent.getHeight() - this.getHeight() + 10
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                             //log the notification
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                             //duration is always 300ms per word unless less than 5 seconds
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Ends the current notification on screen. If more are behind it, the queue will immediately pull and display.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Removes all currently displayed notifications and wipes the notification queue.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Getter for the top drag label associated with this CyderFrame instance. Used for frame resizing.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return The associated DragLabel
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Getter for the bottom drag label associated with this CyderFrame instance. Used for frame resizing.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return The associated DragLabel
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Getter for the left drag label associated with this CyderFrame instance. Used for frame resizing.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return The associated DragLabel
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Getter for the right drag label associated with this CyderFrame instance. Used for frame resizing.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return The associated DragLabel
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Pops open a window relative to this with the provided text
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param text  the String you wish to display
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param title The title of the CyderFrame which will be opened to display the text
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //frames for animations such as dispose and minimize
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Moves the window down until it is off screen before setting the state to ICONIFIED.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * The original position of the frame will be remembered and set when the window is deiconified.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:             //set restore vars here
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //figure out increment for frame num
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //25 frames to animate
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //dispose calls --------------------------------------------------------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //for whatever reason, this should help avoid bug calls in the future,
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     // there is no setter since it will be set to true upon dispose() being invoked
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //content repainting setter for for the panel/iconLabel ----------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Same as the regular overridden dispose method but you have the option to not animate the frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * and practically dispose it immediately
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param fastClose boolean describing whether or not fast close should be invoked
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //if closing confirmation exists and the user decides they do not want to exit the frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //run all preCloseActions if any exists, this is performed after the confirmation check
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 // since now we are sure that we wish to close the frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //kill all threads
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //disable dragging
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //disable content pane REPAINTING not paint to speed up the animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                     //figure out increment for frames
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                     //25 frames to animate
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:                 //remove from consoleframe
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //----------------------------------------------------------------------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Allow or disable moving the window.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param relocatable the boolean value determining if the window may be repositioned
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //dancing ------------------------------------------------------------------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Takes a step in the right direction for the dance routine
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     // ------------------------------------------------------------------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * transforms the content pane by an incremental angle of 2 degrees emulating Google's barrel roll easter egg
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Rotates the currently content pane by the specified degrees from the top left corner.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param degrees the degrees to be rotated by; 360deg = 0deg.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Repaints the title position and button positions in the correct location.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Overriden setSize method to ensure the bounds are never less than 100x100
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param width width of frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param height height of frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Sets the frame bounds and also changes the underlying drag label's bounds which is why this method is overridden.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Sets the minimum window size if resizing is allowed.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param minSize the Dimension of the minimum allowed size
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Sets the maximum window size if resizing is allowed.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param maxSize the Dimension of the minimum allowed size
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Sets the snap size for the window if resizing is allowed.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param snap the dimension of the snap size
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return the minimum window size if resizing is allowed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return the maximum window size if resizing is allowed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return the snap size for the window if resizing is allowed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Choose to allow/disable background image reisizing if window resizing is allowed.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param allowed the value determining background resizing
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * This method should be called first when attempting to allow resizing of a frame.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Procedural calls: init component resizer, set resizing to true, set min, max, and snap sizes to default.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param allow sets/disables resizing of the frame.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Refresh the background in the event of a frame size change or background image change.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Set the background to a new icon and refresh the frame.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param icon the ImageIcon you want the frame background to be
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:             //prevent errors before instantiation of ui objects
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Sets the background color of the Frame's content pane
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param background the Color object value of the content pane's desired background
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Returns the background color of the contentPane.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return Color object of the background color
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Kills all threads associated with this CyderFrame instance. An irreversible action. This
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * method is actomatically called when {@link CyderFrame#dispose()} is invokekd.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Set the background of {@code this} to the current ConsoleFrame background.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Note: the background is not updated when the ConsoleFrame background is, I have plans
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      *  to add a method to enable this
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:             //update content panes
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:             //finally super call
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:             //fix shape
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //update the border covering the resize area
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //update drag labels
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //repaint drag labels
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //update content panes
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //finally super call
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Performs the given action right before closing the frame. This action is invoked right before an animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * and sequential dispose call.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param action the action to perform before closing/disposing
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Performs the given action right after closing the frame. This action is invoked right after an animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * and sequential dispose call.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param action the action to perform before closing/disposing
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //interface to be used for preCloseActions
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //interface to be used for postCloseActions
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Displays a confirmation dialog to the user to confirm whether or not they intended to exit the frame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param message the message to display to the user
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Sets the value for pinning the frame on top.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param pinWindow the value determining whether or not the frame is always on top
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Standard getter for pinned boolean.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return the boolean of pinned
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //pinned to console, second mode of pinning
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Determines if the frame should be pinned to the console.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @return boolean describing if the frame should move with the console
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * Setter for the state of the provided boolean.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:      * @param consolePinned whether or not the frame should stick to the console
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //relativeX, relativeY are used for frame pinning and dragging on the consoleFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //used for frame consolidation points
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //console menu taskbar logic
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //override to prevent changing on disposal calls
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //even if console menu isn't visible, if we're calling generate it needs to be regenerated
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //drawing a border over the image
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //click action, and a hover action
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //initializes this frame instance's border color to be used for drawing/redrawing until object is disposed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //set border color
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //draw center color
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //draw darker image
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //set border color
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //draw center color
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //used for icon frame actions in ConsoleFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //---------------------------------------------------------------------------------------
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:     //overridden so we can add to ConsoleFrame's taskbar menu
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //add to console frame's taskbar as long as it's not an exception
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         //if the console is set to always on top, then we need this frame to be automatically set on top as well
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:         // so that new frames are not behind the console
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:          * A notification that hasn't been notified to the user yet and is waiting in a CyderFrame's queue.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:          * @param text the html text for the eventual notification to display
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:          * @param dur the duration in miliseconds the notification should last for. Use 0 for auto-calculation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:          * @param arrowDir the arrow direction
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:          * @param notificationDirection the notification direction
[13-37-03] [CONSOLE_OUT]: [STRING] CyderFrame:          * @param onKillAction the action to perform if the notification is dismissed by the user
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //how many nodes should be drawn on the grid
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //the physical bounds of this
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //whether or not to allow resizing of the grid via mouse zoom in/out
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //the actual grid data structure
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * Default constructor for CyderGrid.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * @param len the amount of nodes to initially draw: len x len
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * @param width the physical width of this component on its parent container
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * Finds whether or not the grid contains the specified node
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * @param node the node to search for
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * @return whether or not the provided node was found on the grid
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * Adds the specified node to the grid if it is not already in the grid
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * @param node the node to add to the grid if it not already on the grid
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * Removes the specified node from the grid if it exists
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:      * @param node the node to remove
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //standard
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //duh
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             //failsafe
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             //in order to fit this many nodes, we need to figure out the length
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             //bounds of drawing that we cannot draw over since it may be less if we
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             // can't fit an even number of square on the grid
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             // you can't split x 1's into y (y < x) places, pigeonhole principle isn't met
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             // this is why there might seem to be a lot of space left over sometimes when
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             // the number of nodes is relatively high
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             //keep the grid centered on its parent
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             //fill the background in if it is set
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:                 //draw vertical lines
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:                 //draw horizontal lines
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:                 //never draw nodes over the current limit, NEVER
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             //draw borders
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:             //draw extended border if enabled
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //used for incrementing/decrementing the grid size
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:     //nodes used for the Grid's 2D Array
[13-37-03] [CONSOLE_OUT]: [STRING] CyderGrid:         //a node is equal to another one if their x and y coordinates are equal
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:     //rippling
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //restore color so everything goes back to original foreground
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //used to insert color properly
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //init list for strings by tag
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //init ripple iterations list
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //find ripple steps: this takes < 1ms usually
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //still used parsed chars here since that's all we care about rippling anyway
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                     //init builder for this iteration where the ith char
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                     // (could be from any non-html tag), is ripple color
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                     //charSum is how many chars we have passed of the Text tagged string
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                     //how many characters we've set to the rippling char
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                     //loop through all our tagged string
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                         //if it's html simply add it to the builder
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                         //otherwise we might need to ripple some  chars
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                             //loop through all the chars of this Text tagged string
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                                 //first we need to pass as many raw chars
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                                 // as the iteration "i" we are on, next we need to make sure
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                                 // we havne't used up all the ripple chars for this iteration
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                                     //ripple this char and inc rippled
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                                 //otherwise append the char normal, without extra styling
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                                 //increment our position in the Text tagged strings
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                     //add this text iteration to our list
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //now ripple through our ripple iterations
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                             //check for break to free resources quickly
[13-37-03] [CONSOLE_OUT]: [STRING] CyderLabel:                 //fix foreground and text
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:  * CyderPanels are what hold and manage where components go on them. They basically are a wrapper for
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:  * anything that implements CyderLayout and extends the CyderBaseLayout. CyderPanels are really just
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:  * wrappers for Layouts which means we can use them as either a master component for a CyderFrame
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:  * content pane or as a sub panel inside of a parent panel.
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:     //CyderPanel cannot exist without a CyderLayout
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:         //layouts are always null, we use math to determine our layout on redrawing events
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:     //disabling repainting of the content pane for optimization purposes
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:         //as long as we should repaint, repaint it
[13-37-03] [CONSOLE_OUT]: [STRING] CyderPanel:     //standard
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:      * Constructor that starts the animation timer to allow the progressbar to move the animation colors
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //frames for animation, more frames means slower animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //two colors for the buffered image used for animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //the image used for the animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //direction of animation, L2R or R2L for horiz and T2B or B2T for vert
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //overridden since custom animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //UI Shape, currently only SQUARE works, rounded still being implemented
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //NOTE: animation direction is simply the direction the bar animation moves,
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     // not what direction the bar moves (top to bottom vs bottom to top or left to right vs right to left)
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:         //square uses the custom animation
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //get proper width and height accounting for insets as well
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //if it's invisible then why paint?
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //the amount the progress bar should be filled by with the proper parameters passed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //set the clip at the point that it shouldn't extend past
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //image drawing offset for completed percent
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //get the image with the colors of proper width and height
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //get proper width and height accounting for insets as well
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //if it's invisible then why paint?
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //the amount the progress bar should be filled by with the proper parameters passed
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //set the clip at the point that it shouldn't extend past
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //right to left otherwise left to right, offset for progress image drawing
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //fill
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //outline over fill
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //clip so nothing out of outer oval
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //fill
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //outline over fill
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:                 //clip so nothing out of outer oval
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //maps the given value in the first range to the corresponding value in the second range
[13-37-03] [CONSOLE_OUT]: [STRING] CyderProgressUI:     //linearly interpolate between val1 and val2 where amt is the amount to interpolate between the two values
[13-37-03] [CONSOLE_OUT]: [STRING] CyderScrollList:         //used to add the CyderScrollListLabels
[13-37-03] [CONSOLE_OUT]: [STRING] CyderScrollList:         //item alignment is 0?
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollList:         //set list location to top
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollPane:         // Set ScrollBar UI
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollPane:             // viewport
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollPane:             // vertical scroll bar
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollPane:             // horizontal scroll bar
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollPane:         // Layering
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollPane:      * Class extending the BasicScrollBarUI and overrides all necessary methods
[13-37-04] [CONSOLE_OUT]: [STRING] CyderScrollPane:         //invisible buttons to hide scroll bar buttons - inner class
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:      * Creates a listener to handle track events in the specified slider.
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:         // Call superclass method for lower thumb location.
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:         // Adjust upper value to snap to ticks if necessary.
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:                 // If it's not on a tick, change the value
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:         // Calculate upper thumb location.  The thumb is centered over its
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:         // value on the track.
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:             //-10 is so that we can't see the line change in the middle if it's hollow
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSliderUI:             //no paint
[13-37-04] [CONSOLE_OUT]: [STRING] CyderSwitch:     //overridden to also disable the button
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:  * Class to be used for CyderFrames, the parent is expected to be an instance of CyderFrame
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:     //override so we can change the background color if needed
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:     //standard height is 30px
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:     //default order: mini, pin, close
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Gets the button from the button list at the given index
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param index the index of the button to be returned
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @return the button at the provided index
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Adds the button at the given index, 0 means add to the start and {@link DragLabel#getButton(int)#getSize()}
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      *  means add to the end
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param button the JButton with all the properties already set such as listeners, visuals, etc. to add
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      *                 to the button list
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param addIndex the index to append the button to in the button list
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:         //to avoid a weird visual bug, don't let a button that's already been added be added again
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Moves the provided button the specified index.
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param button the button to move to the specified index
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param newIndex the index to move the specified button to
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Moves the button at the oldIndex to the new Index and pushes any other buttons out of the way.
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param oldIndex the position of the button to target
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param newIndex the index to move the targeted button to
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Removes the button in the button list at the given index
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param removeIndex index of button to remove
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Standard getter for the current button list
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @return the current button list
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Update the button list with a custom one
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * @param list the list of JButtons to use for the button list
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:         //remove all buttons from button list
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:      * Refreshes and repaints the button list
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:         //remove all buttons to repaint them
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:                     //might have to fix this method here depending on how many more buttons with text you add
[13-37-04] [CONSOLE_OUT]: [STRING] DragLabel:                     //might have to fix this method here depending on how many more buttons with text you add
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * Custom width getter since this is a custom paint component.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * @return the width plus the x-offset of 14 twice for both sides with the arrow size
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * added in if the arrow is on the left or right.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * Custom height getter since this is a custom paint component.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * @return the height plus the y-offset of 16 twice for both sides with the arrow size
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * added in if the arrow is on the top or bottom.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * This method to be used with an already initialized component. Expected that the component's starting
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * location is already set.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * @param notificationDirection the direction for the notification to enter and exit from.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:                 //now that it's visible, call vanish with the proper delay if enabled
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * Kill any notification by stopping all animation threads and setting this visibility to false.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * Must re-initialize notification object using constructor; you shouldn't make a killed notification
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * visible again via {@link Component#setVisible(boolean)}.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * This method to be used in combination with an already visible notification to immediately move it off of the
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * parent until it is not visible. Upon completing the animation, the notification is removed from the parent.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * @param notificationDirection the direction to exit to.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * @param parent the component the notification is on. Used for bounds calculations.
[13-37-04] [CONSOLE_OUT]: [STRING] Notification:      * @param delay the delay before vanish.
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:     //private constructor to avoid object creation
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * Moves the specified frame object up until it is no longer visible then invokes dispose
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param frame the frame object to close
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * Moves the specified frame object down until it is no longer visible then sets the frame's state
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * to Frame.ICONIFIED. This method works for anything that inherits from JFrame
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param frame the frame object to minimize and iconify
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * Master method to animate any component up in a separate thread
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param start the starting y value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param stop the ending y value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param delay the ms delay in between increments
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param increment the increment value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param comp the component to move
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * Master method to animate any component down in a separate thread
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param start the starting y value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param stop the ending y value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param delay the ms delay in between increments
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param increment the increment value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param comp the component to move
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * Master method to animate any component left in a separate thread
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param start the starting x value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param stop the ending x value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param delay the ms delay in between increments
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param increment the increment value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param comp the component to move
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * Master method to animate any component right in a separate thread
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param start the starting x value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param stop the ending x value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param delay the ms delay in between increments
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param increment the increment value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param comp the component to move
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param start the starting y value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param stop the ending y value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param delay the ms delay in between increments
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param increment the increment value
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param jLabel the jlabel to animate
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @deprecated use {@link AnimationUtil#componentUp(int, int, int, int, Component)}
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * This method takes in a width and outputs the increment and delay to obtain a near 1s animation time
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * Used purely for console background switching animations.
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @param len the length of the side of which want to find an increment for
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:      * @return an array representing the delay in ms followed by the width increment
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:         //assign ret[0] to delay
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:         //assign ret[1] to inc
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:             //width below 600 now allowed
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:                 //increment will be 1 and delay will be at least 1 if not greater
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:                 //delay is 1ms, minimum in ms delay
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:                 //increment will be 1 from 1001 to 1499
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:                 //increment will be 2 from 1500 to 2000
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:                 //increment will be 3 from 2001 to 2499
[13-37-04] [CONSOLE_OUT]: [STRING] AnimationUtil:                 //width is 1000 and our delay is 1000 which resulted in 1 here. Thus we return the ideal array
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * Calculates the needed height of an inform/dialog window.
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * @param text the string to display
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * @return an object composed of the width, height, and possibly corrected text to form the bounding box
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      *           for the provided display string.
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * Calculates the needed height for an inform/dialog window given the prefered width and text.
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * @param text the string to display
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * @param maxWidth the maximum width allowed
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * @param font the font to be used
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      * @return an object composed of the width, height, and possibly corrected text to form the bounding box
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:      *           for the provided display string.
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:         //does the string contain any html? if so we have to be careful where we insert needed line breaks
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:         //unfortunate
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //while we still have text....
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                 //failsafe
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //if there's remaining text, it's just non-html
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //now add breaks into the lines that are needed
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                     //evluate if the line is too long
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                         //line is too long, figure out how many breaks to add
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                         //first, how many multiples of current width does it take to get to max width?
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                         //if only one line is the result somehow, ensure it's 2
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //recombine text into string
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //figure out height
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //figure out width
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:         //nice, we can just add line breaks wherever we need
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //only contains possible line breaks so split at those
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                 //evluate if the line is too long
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                     //line is too long, figure out how many breaks to add
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                     //first, how many multiples of current width does it take to get to max width?
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                     //if only one line is the result somehow, ensure it's 2
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                     //line isn't too long, simply append it
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                 //if we're not on the last line, add the original break we split at back in
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //more lines might exist now since we added breaks
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //finally figure out the width and height based on the amount of lines and the longest line
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //this should always run but to be safe check first
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //if line goal is reached, exit
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:             //is index a space? if so, replace it with a break
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                 //check right for a space
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                     //is j valid
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                         //is it a space
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                 //check left for a space
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                     //is j valid
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                         //is it a space
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                 //final resort to just put it at the current index as long as we're not in the middle of a line break
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:                 //we shouldn't be in a line break since this is for html having been parsed away
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:     //adds <div style='text-align: center;'> to the provided html string
[13-37-04] [CONSOLE_OUT]: [STRING] BoundsUtil:     //inner classes and enums
[13-37-04] [CONSOLE_OUT]: [STRING] ColorUtil:                     * 0.587 + backgroundDom.getBlue() * 0.114) > 186) {
[13-37-04] [CONSOLE_OUT]: [STRING] ColorUtil:                     * 0.587 + backgroundDom.getBlue() * 0.114) > 186) {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //instantiation does nothing but we still want to allow object creation for multiple instances
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //should we require multiple string/file getteres at the same time.
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     /** Custom getInput method, see usage below for how to setup so that the program doesn't
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * spin wait on the main GUI thread forever. Ignoring the below setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * instructions is fine only for the getString method, the getFile method must be surrounded by
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * a thread whenever called.
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * USAGE:
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  <pre>
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  {@code
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  new Thread(() -> {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *      try {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *          String input = new GetterUtil().getString("title","tooltip","button text");
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *          //other operations using input
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *      } catch (Exception e) {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *          ErrorHandler.handle(e);
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *      }
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  }, "wait thread for GetterUtil().getString()").start();
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  }
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  </pre>
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param title the title of the frame
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param tooltip the tooltip of the input field
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param buttonText the text of the submit button
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @return the user entered input string. NOTE: if any improper input is ateempted to be returned,
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  this function returns the string literal of "NULL" instead of {@code null}
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     /** Custom getInput method, see usage below for how to setup so that the program doesn't
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * spin wait on the main GUI thread forever. Ignoring the below setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * instructions is fine only for the getString method, the getFile method must be surrounded by
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * a thread whenever called.
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * USAGE:
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  <pre>
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  {@code
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  new Thread(() -> {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *      try {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *          String input = new GetterUtil().getString("title","tooltip","button text","initial field value");
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *          //other operations using input
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *      } catch (Exception e) {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *          ErrorHandler.handle(e);
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *      }
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  }, "wait thread for GetterUtil().getString()").start();
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  }
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  </pre>
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param title the title of the frame
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param tooltip the tooltip of the input field
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param buttonText the text of the submit button
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param initialString the initial text in the input field
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @return the user entered input string. NOTE: if any improper input is ateempted to be returned,
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  this function returns the string literal of "NULL" instead of {@code null}
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * Any frames shown through this class are set relative to the {@code relativeFrame}
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param relativeFrame the frame to set other frames relative to
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     /** Custom getInput method, see usage below for how to setup so that the program doesn't
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * spin wait on the main GUI thread forever. Ignoring the below setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * instructions will make the application spin wait possibly forever.
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * USAGE:
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * <pre>
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * {@code
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *   new Thread(() -> {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *         try {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *             File input = new GetterUtil().getFile("FileChooser title");
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *             //other operations using input
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *         } catch (Exception e) {
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *             ErrorHandler.handle(e);
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *         }
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      *  }, "wait thread for GetterUtil().getFile()").start();
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * }
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * </pre>
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @param title the title of the JavaFX FileChooser
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * @return the user-chosen file
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //reset needed vars in case an instance was already ran
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //code copied from dir search widget
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //frame setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //field setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //last setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                     //we may only go back if there's something in the back and it's different from where we are now
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                         //traversing so push where we are to forward
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                         //get where we're going
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                         //now simply refresh based on currentDir
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //next setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                     //only traverse forward if the stack is not empty and forward is different from where we are
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                         //push where we are
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                         //figure out where we need to go
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                         //refresh based on where we should go
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //files scroll list setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //adding things to the list and setting up actions for what to do when an element is clicked
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //generate the scroll label
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //final frame setup
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * File getter inner methods
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     //general refresh method that doesn't clear the stacks
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //get files
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //remove old files
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //wipe name and files lists
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //add new files arr to LL
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //get corresponding names for name list
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //setup scroll
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //add new items to scroll and actions
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //regenerate scroll
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //frame revalidation
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     //refresh button that clears the back stack
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //clear forward since a new path
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //before where we were is wiped, put it in backwards if it's not the last
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //this is our current now
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //get files to display
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //remove old list
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //clear display lists
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //add array files to LL files
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //add corresponding names of files to names list
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //regenerate scroll
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //add items with coresponding actions to scroll
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //generate scroll and add it
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:         //frame revalidation
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * File getter UI vars
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     //all ui elements
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     //corresponding lists
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     //stacks for traversal
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:     //where we currently are
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:      * Confirmation getter
[13-37-04] [CONSOLE_OUT]: [STRING] GetterUtil:                 //accounting for offset above
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * Crops the specified bufferedImage to the new bounds and returns a new buffered image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param image the buffered image to crop
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param startx the starting x pixel within the image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param starty the starting y pixel within the image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param width the width of the new image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param height the height of the new image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @return the requested cropped image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * Returns the passed background file accounting for set rotate direction. For example, if the direction
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * is left this method will return a left rotated image. Use {@link cyder.ui.ConsoleFrame#getCurrentBackgroundImageIcon}
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * to get the image without possible rotations applied. This method is used to set the console background when the background
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * is altered or updated.
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param bufferedImage the path to the file
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param consoleDirection the cardinal direction of rotation
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @return the rotated image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:     /** the two images must be of the same size in order to merge them into one image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param newImage the new image (image to be placed to the dir[ection] of the old image)
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param oldImage the old image (image to be placed center)
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @param dir the direction to place the newImage relative to the oldImage
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @return the combined image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * Finds the optimal size provided the min/max width/height bounds. The return dimension is ensured
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * to be within the provided bounds
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * @return an array representing the new image dimensions that the provided image should be cropped to
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:      * so that the provided min/max properties are maintained
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:         //inform the user we are changing the size of the image
[13-37-04] [CONSOLE_OUT]: [STRING] ImageUtil:         //after all this, if something's too big, crop as much as possible
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Opens the provided file outside of the program regardless of whether or not a
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * handler exists for the file type
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param filePath the path to the file to open
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Determines whether or not the provided string is a link or a file/directory path and then opens it
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param fileOrLink the link/file to open
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Creates the provided temporary file in the temp directory and writes the given string lines to it
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param filename the name of the file to create
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param extension the extension of the file to create
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param lines the Strings to write to the file
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Deletes the temperary directory if it exists
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:     //determines whether or not the sys.json file exists, is parsable, and contains non-null fields
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //gson obj
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //read into the object if parsable
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:                 //couldn't be parsed so exit program
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //object successfully parsed by GSON at this point
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //make sure the obj isn't null
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //try all getters and make sure not null
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:                 //get the getter method
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:                     //all getters return strings for user objects so invoke the method
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Returns the SystemData object representing all the system data located in sys.json
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @return the SystemData object
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //if successful set as our sd object
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Writes the provided SystemData object to sys.json, overriding whatever object is represented there.
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param sd the SystemData object to write
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //now update IOUtil's sd object
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Logs any possible command line arguments passed in to Cyder upon starting.
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Appends JVM Command Line Arguments along with the start location to the log
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param cyderArgs command line arguments passed in
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Clean the users/ dir of any possibly corrupted or invalid user folders
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Attempts to fix any user files that may be outdated via preference injection
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Opens the provided file, possibly inside of the program if a handler exists for it
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param FilePath the path to the file to open
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:         //use our custom text editor
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:         //use our custom photo viewer
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:         //use our own mp3 player
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:         //welp just open it outside of the program :(
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Plays the requested mp3 audio file using the general IOUtil JLayer player
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param FilePath the path to the mp3 file to play
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Plays the requested system audio file using a new JLayer player
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      *      (this cannot be stopped util the mpeg is finished)
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param FilePath the path to the mp3 file to play
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Stops the audio currently playing that is absent of an AudioPlayer object
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:                 //set to null so that generalAudioPlaying works as intended
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Stops any and all audio playing either through flash player or the general IOUtil JLayer player
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Pause audio if playing via flash player
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Changes the current user from console frame's name to the provided name.
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param newName the new name of the user
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Changes the current user from console frame's password to the provided password
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param newPassword the raw char[] new password to hash and store
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Gets DOS attributes of the provided file
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param file the file to obtain the attributes of
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @return the DOS attributes in the following order: isArchive, isHidden,
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      *              isReadOnly, isSystem, creationTime, isDirectory, isOther, isSymbolicLink,
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      *              lastAccessTime, lastModifiedTime
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Returns the size of the provided file in bytes
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param f the file to calculate the size of
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @return the size in bytes of the file
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Returns a binary string from the provided binary file
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param f the binary file of pure binary contents
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @return the String of binary data from the file
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Returns a hex string from the provided binary file
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @param f the binary file of pure binary contents
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @return the String of hex data from the file
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Handles the sandbox and it's files depending on the computer we are on
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Wipes the Sandbox of files if we are not in developer mode, ensures the folder stays though.
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Upon entry this method attempts to fix any user logs that ended abruptly (an exit code of -1 most likely)
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * as a result of an IDE stop or OS Task Manager Stop.
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:                 //for all directories of days of logs
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:             //now fix userdata associated with the logs
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * Used to test for Nathan being an idiot and having duplicate exit condition codes
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:      * @return - boolean describing whether or not Nathan messed up
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:         //if there are exit conditions with the same number exit and inform
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:                 //you're an idiot
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:     //system data class
[13-37-04] [CONSOLE_OUT]: [STRING] IOUtil:         //inner classes
[13-37-04] [CONSOLE_OUT]: [STRING] IPUtil:      * Refreshes this object's IPData var
[13-37-04] [CONSOLE_OUT]: [STRING] IPUtil:     //IPData inner class
[13-37-04] [CONSOLE_OUT]: [STRING] NumberUtil:      * Returns "number" amount of random numbers within the provided range.
[13-37-04] [CONSOLE_OUT]: [STRING] NumberUtil:      * @param min the minimum random number possible
[13-37-04] [CONSOLE_OUT]: [STRING] NumberUtil:      * @param max the maximum random number possible
[13-37-04] [CONSOLE_OUT]: [STRING] NumberUtil:      * @param number the number of random elements desired
[13-37-04] [CONSOLE_OUT]: [STRING] NumberUtil:      * @param allowDuplicates allow duplicate random values for a pure random experience vs unique random elements
[13-37-04] [CONSOLE_OUT]: [STRING] NumberUtil:      * @return an array of ints of the desired size of random elements from min to max
[13-37-04] [CONSOLE_OUT]: [STRING] ReflectionUtil:         //remove last two chars (space and ,) and add the closing parenthesis
[13-37-04] [CONSOLE_OUT]: [STRING] ReflectionUtil:      * A common method utilized by near all top-level Cyder classes as the overridden logic for their toString() methods
[13-37-04] [CONSOLE_OUT]: [STRING] ReflectionUtil:      * @param obj the obj to return a String representation for
[13-37-04] [CONSOLE_OUT]: [STRING] ReflectionUtil:      * @return the String representation for the provided object detailing the classname, hashcode, and reflected data
[13-37-04] [CONSOLE_OUT]: [STRING] ReflectionUtil:         //remove anything after the $int if superName contains a $
[13-37-04] [CONSOLE_OUT]: [STRING] ReflectionUtil:         //remove anything after the $int if superName contains a $
[13-37-04] [CONSOLE_OUT]: [STRING] SecurityUtil:      * Converts the given char array to a byte array without using string object.
[13-37-04] [CONSOLE_OUT]: [STRING] SecurityUtil:      * This way any possible security issues that arise from the nature of String pool are avoided.
[13-37-04] [CONSOLE_OUT]: [STRING] SecurityUtil:      * Remember to use Arrays.fill(bytes, (byte) 0) for bytes or Arrays.fill(chars, '\u0000') for chars
[13-37-04] [CONSOLE_OUT]: [STRING] SecurityUtil:      * when finished with the byte/char array.
[13-37-04] [CONSOLE_OUT]: [STRING] SecurityUtil:      * @param chars the char array to be converted to byte array
[13-37-04] [CONSOLE_OUT]: [STRING] SecurityUtil:      * @return the byte array representing the given char array
[13-37-04] [CONSOLE_OUT]: [STRING] SecurityUtil:         //clear possible sensitive data
[13-37-04] [CONSOLE_OUT]: [STRING] SpotlightUtil:      * Gets the windows spotlight directory. I'm not sure if it could chane since according to Google
[13-37-04] [CONSOLE_OUT]: [STRING] SpotlightUtil:      * source it's staticly set at Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy. To be safe, however
[13-37-04] [CONSOLE_OUT]: [STRING] SpotlightUtil:      * this method exists
[13-37-04] [CONSOLE_OUT]: [STRING] SpotlightUtil:      * @return the name of the directory containing the Windows spotlight images
[13-37-04] [CONSOLE_OUT]: [STRING] SpotlightUtil:      * Wipes the windows spotlight directory, windows will download new ones eventually
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * Finds the total number of Java lines found within .java files
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * and recursive directories within the provided starting directory
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @param startDir the directory to begin recursing from
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @return the total number of java code lines found
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:                     //not blank and not a comment means a code line
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * Finds the total number of lines found within each java file provided the starting directory
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * to begin recursing from
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @param startDir the directory to begin recursing from
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @return the total number of lines found
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * Finds the number of java comments associated with all .java files
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * within the directory and recurively located directories provided
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @param startDir the directory to begin recursing from
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @return the raw number of comments found
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:                     //rare case of this happening but needed to not trigger a long block comment
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:                     //start of a block comment
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:                     //end of a block comment
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:                     //if we've activated block comment or still on, increment line count
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:                     //otherwise if the line has text and is a comment inc
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * Determines if the provided line is a comment line
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @param line the string in question to possibly be a comment
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @return whether or not the line is a comment
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * Finds the number of blank lines associated with .java files within the provided start directory
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @param startDir the directory to begin recursing from to find .java files
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @return the number of blank lines found in the provided directory and subdirectories
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * Finds each to-do within all .java files recursing from the provided start directory
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @param startDir the directory to begin recursing from
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @return a String representation of all todos within the discovered directories.
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      *          This String may be printed directly as it includes line breaks
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * Finds the raw number of todos listed in code by counting the number
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * of lines that are a comment with t0do inside of them.
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @param startDir the directory to start recursing from, typically src/
[13-37-04] [CONSOLE_OUT]: [STRING] StatUtil:      * @return the number of todos found in the provided directory and sub-directories
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:  * Simple general String util methods along with some JTextPane appending methods
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:  * Note: these methods are not thread safe and you should take that into account when using these utils
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:     //StringUtil can only be instantiated if a valid JTextPane is provided
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Standard getter for this object's possible JTextPane
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return The resultant output area if one is connected
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Sets the output area for this instance of StringUtil.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param jTextPane the JTextPane which we will append to when needed
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Removes the last "thing" addeed to the JTextPane whether it's a component,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  icon, or string of multi-llined text.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  In more detail, this method figures out what it'll be removing and then determines how many calls
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *   are needed to {@link StringUtil#removeLastLine()}
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Removes the last line added to the linked JTextPane. This could appear to remove nothing,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  but really be removing just a newline (line break) character.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Adds a {@link Component} to the linked JTextPane. Make sure all listeners, bounds,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  modifiers, etc. have been set before printing the component.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param c the component to append to the pane
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param nm the name identifier for the style
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param str the string identifier for the underlying insert string call
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Adds a {@link Component} to the linked JTextPane. Make sure all listeners, bounds,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  modifiers, etc. have been set before printing the component.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param c the component to append to the pane
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Adds a {@link Component} to the linked JTextPane. Make sure all listeners, bounds,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  modifiers, etc. have been set before printing the component. Following the component print,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  a new line is appended to the pane.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param c the component to append to the pane
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Adds a {@link Component} to the linked JTextPane. Make sure all listeners, bounds,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  modifiers, etc. have been set before printing the component. Following the component print,
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      *  a new line is appended to the pane.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param c the component to append to the pane
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param nm the name identifier for the style
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param str the string identifier for the underlying insert string call
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Reverses the given array
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param Array the array to reverse
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the reversed array
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Determines if the provided string starts with the provided prefix
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param string the string to see if it starts with the given prefix
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param prefix the prefix to search the array for
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the boolean result of the comparison
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Determines if the provided string ends with the provided suffix
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param string the string to to see if it ends with the given suffix
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param suffix the suffix to search the array for
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the boolean result of the comparison
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Prints the object array to {@link this} object's connected output area
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param arr the array of objects to print
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Determines the proper english grammer when attempting to use possession on a string that typically
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * represents a noun.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param name the proper name of the noun
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the string to be appended to the proper noun ('s or simply ')
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Returns the plural form of the word. A singular item doesn't need to be made plural
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * whilst any number of objects other than 1 should be converted to plural using English Language rules.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param num the number of items associated with the word
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param word the word to be converted to plural
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the plural form of the word
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Determines if the given string is empty
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param s the string to compare for emptiness (self.Soul() usually returns true)
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the boolean result of the comparison
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Fills a string with the provided character to result in a string of the specified length
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param count the length of the resultant string
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param c the character to fill the string with
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the resultant filled array
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Finds the first word in a given string.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param sentence the string to search for
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the resultant first word found
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Determines if a word is palindrome (spelled the same forward and backwards like ogopogo and racecar).
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param word the word to check
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the result of the comparison
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Uses a regex to find the first occurence of a digit and follows until no more digits.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param search the string to search for digits in
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the reusltant number found, if any
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Matches a given string with the provided regex and returns the result.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param search the string to use the regex on
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param regex the regex to compare to the given string
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the resultant match of the string to the regex
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Concatinates two arrays together.
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param a the first array
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param b the second array
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the resultant array
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * Converts the first character in a string to the capital version of it if it is a standard latin letter
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @param word the word to capitalize the first letter of
[13-37-04] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the resultant wtring
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Filters out simple leet speech from the provided string.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param filter the word to filter leet out of
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the resultant string after filtering
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:         //split at spaces and run leet in each of those
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Inner filtering of leet speach for words specifically, this is the main driver method that does the magic.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param word the word to filter leet out of.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the word having leet removed to the best of our abilities
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:             //someone pls make this better and PR a method for this, make it work for permutations
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:             //from this table: https://cleanspeak.com/images/blog/leet-wiki-table.png
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Tests whether or not the provided string has the provided word inside of it.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param userInput the master string to search through
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param word the word to search the master string for
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return a boolean depicting whether or not the given string contains the test word
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Tests a given string to see if it contains any blocked words contained in the v.txt system file
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param input the provided string to test against
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param filterLeet whether or not to filter out possible leet from the string
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return a boolean describing whether or not the filter was triggered by the input
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:         //remove comment stuff from input
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Provides the exact string object but with the first character converted to lowercase.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param str the string to convert the first character to lowercase
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the resultant string
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Count the number of words of the provided string.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param str the string ot count the words of
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the word count of the requested string
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Uses a regex to get the file name of the provided file, does not return the period.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param file the file of which to return the name of (this does not include the
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      *             extension; use {@link File#getName()} )} to get the full filename + extension)
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the file name requested
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Uses a regex to get the file extension of the provided file, returns the period too.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param file the name of the file of which to return the extension of
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the file extension requested
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Uses a regex to get the file name of the provided file, does not return the period.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param file the name of the file of which to return the name of (this does not include the
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      *             extension; use {@link File#getName()})} to get the full filename + extension)
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the file name requested
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Uses a regex to get the file extension of the provided file, returns the period too.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param file the file of which to return the extension of
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the file extension requested
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Determines if a string is confirming a question or denying it
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param input the input string to check for verifcation key words
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the boolean result of the confirmation
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Ensures that there is a space after every comma within the input.
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param input the potentially wrongly formatted string
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return the corrected string
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Determines whether the given words are anagrams of each other
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param wordOne the first word
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param wordTwo the second word
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return a boolean describing whether or not these words are anagrams
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * Finds the rawtext and html tags of a string and returns a linked list representing the parts
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @param htmlText the text containing html tags
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:      * @return a linked list where each object represents either a complete tag or raw text
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:         //init list for strings by tag
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:         //figoure out tags
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:             //failsafe
[13-37-05] [CONSOLE_OUT]: [STRING] StringUtil:         //if there's remaining text, it's just non-html
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @param property the key of the property you want. Ex: user.name
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @return returns the system property for the passed requested property if it is valid
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * Runs the vbs shell script
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @param vbsScript the lines of the script to execute
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:     //I think this is made for my keybaord? Logictech gpro? see if you can figure out the keyboard and drivers?
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * Returns a list of all files contained within the startDir and sub directories
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * that have the specified extension
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @param startDir the starting directory
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @param extension the specified extension. Ex. ".java"
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @return an ArrayList of all files with the given extension found within the startDir and
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * sub directories
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:         //init return set
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:         //should be directory but test anyway
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:             //if it's a file with the proper extension, return it
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * Checks the OS and if it is an OSX build, notifies why we are going to exit
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * and exits the program. Cyder is built for Windows 10 (as it plainly says),
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * and also for linux distros. OS X causes Cyder to result in unintended behavior.
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * Confirms whether or not the command is valid. e.g. pass "python" or "ffmpeg" and if the returned value is false,
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * ffmpeg/python are not installed.
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @param command the command to run in the terminal
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:      * @return whether or not the command is valid
[13-37-05] [CONSOLE_OUT]: [STRING] SystemUtil:             //this is kind of dangerous...
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:     //commonly used date patterns
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      * Returns the time returned by running the provided string into a SimpleDatFormat object and formatting it.
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      * @param datePattern the provided date pattern
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      * @return the string representation of the current time
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      * Returns a string detailing how many years/months/days/hours/minutes/seconds
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      *  are represented by the given input parameter
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      * @param msTime the raw long of ms
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      * Returns a string detailing how many years/months/days/hours/minutes/seconds
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      *  are represented by the given input parameter
[13-37-05] [CONSOLE_OUT]: [STRING] TimeUtil:      * @param msTime the raw long of ms
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:     //the semaphore to use when reading or writing from/to a JSON file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:     //getter so exiting method can make sure jsonIOSem is not locked
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Sets the given user's data using the provided name and data value
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param user the user object to call the setter on
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param name the name of the data to change
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param value the data value to set it to
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Sets the user data of the provided file using the given data and name
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param f the file to write the json data to
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param name the data name
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param value the value of the data to update
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Writes the provided user after being converted to JSON format to the provided file.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param f the file to write to
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param u the user object to write to the file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Writes the given user to the current user's Json file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param u - the user to serialize and write to a file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Function called upon UUID being set for consoleFrame to attempt to fix any user data
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * in case it was corrupted. If we fail to correct any corrupted data, then we corrupt the user and exit
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //this handles data whos ID is still there
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     //object returned by current getter
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                         //fatal data that results in the user being corrupted if it is corrupted
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                         //non-fatal data that we can restore from the default data
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                             //find corresponding setter
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                     //find corresponding default vaule
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Attempts to read backgrounds that Cyder would use for a user.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * If it fails, the image is corrupted so we delete it in the calling function.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Extracts the user from the provided json file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param f the json file to extract a user object from
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return the resulting user object
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Extracts the user from the provided json file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param UUID the uuid if the user we want to obtain
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return the resulting user object
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Extracts the user from the the currently logged in user.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return the resulting user object
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Extracts the requested data from the provided json file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param f the json file to extract data from
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param name the data to extract from the file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return the requested data
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Gets the requested data from the currently logged in user.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * This method exists purely for legacy calls such as getUserData("foreground").
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Ideally the call should be extractUser().getForeground()
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param name the ID of the data we want to obtain
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return the resulting data
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //find default value as a fail safe
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //data not set to return default
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Assuming the corresponding getter and setter functions exist in User.java,
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * this method will call the getter method that matches the provided data.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * This method exists purely for legacy calls such as extractUserData("font")
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Ideally this method should be done away with if possible, perhaps adding a default function
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * o the {@code Preference} object could lead to a new path of thinking about user prefs/data.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param u the initialized user containing the data we want to obtain
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param name the data id for which to return
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return the requested data
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:         //log handler calls that aren't spammed
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:     //read once on compile time
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param dataid the id of the data we wish to obtain from userdata.json
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return boolean detemrining whether or not this data should be ignored by the SessionLogger
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Determines whether the provided uuid is already logged in
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param uuid the uuid to test for
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return boolean describing whether or not the provided uuid assocaited with a cyder user is currently logged in
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:         //should be impossible to not exists but I'll still check it regardless
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * For all the user's in the users/ dir, sets their loggedin data
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * to what it actually is regardless of what it says
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                         //what we'll write to this json file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                 //we've started a Cyder instance already so there will always be one
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                     //loop through logs backwards
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                                 //this user we're on now was the last logged in if we get to the end of the file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                                 // and the last login tag we find has their uuid associated wit hit
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                         //now we have the last line as well so check if it contains the tags
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                             //they're logged in then since this is the last time this user was logged in
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                                             // and that log doesn't conclude properly
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Checks whether or not the given name/pass combo is valid and if so, sets the
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * ConsoleFrame UUID to it
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param name the username given
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param hashedPass the already once SHA256 hashed password
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return whether or not the name/pass combo was valid
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //get all users
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //get all valid users
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //loop through all users and extract the name and password fields
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 //if it's the one we're looking for, set consoel UUID, free resources, and return true
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @return a user object with all of the default values found in {@code GenesisShare}
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:         //for all the preferences
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //get all methods of user
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 //make sure it's a setter with one parameter
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     //parse away set from method name and find default preference from list above
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     //find default value to match
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                             //we've invoked this setter with the preference so next preference
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                             // :/ not sure what happened here
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:         //exernal things stored in a user aside from preferences
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Injects new preferences and their default values into an old json if it is found to not contain all the required user data.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param f the file to check for corrections
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //aquire sem
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //init IO for json
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //gson obj
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //read into the object if parsable
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 //couldn't be parsed so delete it
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //validate all fields, if anything isn't there, delete the json so this user is ignored
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //so google is literally NO help in searching "gson tell if field was ignored"
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             // so let's just find all getters and call them and see if the thing returned is null-like
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             // if so, we're fucked so delete the file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //for all methods
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 //get the getter method
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     //all getters return strings for user objects so invoke the method
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                             //this thing doesn't exist so return false where the IOUtil method will delete the file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //write back so that it's a singular line to prepare for pref injection
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //read contents into master String
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //make sure contents are not null-like
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //remove closing curly brace
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //keep track of if we injected anything
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //loop through default perferences
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 //old json detected and we found a pref that doesn't exist
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     //inject into json
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     //adding a trailing comma is fine since it will be parsed away by gson upon
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     // serialization of a user object
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //add closing curly brace back in
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //write back to file
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 //log the injection
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Used to log out all users before logging in a new user
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * After a user's json file was deleted due to it being un-parsable, null, or any othe reason,
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * this method informs the user that a user was corrupted and attempts to tell the user
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * which user it was by listing the files associated with the corrupted user.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * This method should be utilized anywhere a userdata.json is deleted.
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param UUID the uuid of the corrupted user
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //create parent directory
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //delete the json if it still exists for some reason
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:             //if there's nothing left in the dir, delete the whole folder
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 //otherwise we need to figure out all the file names in each sub-dir, not recursive, and inform the user
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                 // that a json was deleted and tell them which files are remaining
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:                     //log the corruption
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * Zips the provided file with the given name using hte provided ZOS
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param fileToZip the file/dir to zip
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param fileName the name of the resulting file (path included)
[13-37-05] [CONSOLE_OUT]: [STRING] UserUtil:      * @param zipOut the Zip Output Stream
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:                     //req build
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:                     //req and response ret
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:                     //build file objects to return
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:                     //req build
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:                     //req and response ret
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:             //make sure the audio was downloaded
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:      * Retreives the first valid UUID (if one exists)
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:      * @param youtubeQuery the user friendly query on youtube. Example: "Gryffin Digital Mirage"
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:      * @return the first UUID obtained from the raw html page youtube returns corresponding to the desired query
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:                 //crop to middle of w
[13-37-05] [CONSOLE_OUT]: [STRING] YoutubeUtil:                 //crop to middle of h
[13-37-05] [CONSOLE_OUT]: [STRING] CardWidget:  * Naming convention: you should name the card with the name of the holiday followed by the year without any spaces.
[13-37-05] [CONSOLE_OUT]: [STRING] CardWidget:  * Example: Christmas2022() or Halloween2020() could be a method. These methods will then be automatically invoked on that particular day
[13-37-05] [CONSOLE_OUT]: [STRING] CardWidget:  * See special day events in ConsoleFrame for an example on how these methods are invoked and why
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:         //spawn mini mode for current timezone button
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //entonces our radius is as follows
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //center point to draw our hands from
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //vars used in if
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                     //draw numbers in the boxes
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                     //drawing center points
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                     //drawing center points
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //current theta, and x,y pair to draw from the center to
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //hour hand is decreased by 30%
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //draw hour hand
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //minute hand is 20% decrease
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //current theta, and x,y pair to draw from the center to
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //draw minute hand
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                     //second hand is 85% of original r
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                     //current theta, and x,y pair to draw from the center to
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                     //draw second hand
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                 //draw center dot
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:         //figure out starting theta for hour, minute, second
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:                     //increment seconds
[13-37-05] [CONSOLE_OUT]: [STRING] ClockWidget:     //gets the time with the format calculating in the current GMT offset
[13-37-05] [CONSOLE_OUT]: [STRING] ConvexHullWidget:      * Function to find the orientation of a triplet pair
[13-37-05] [CONSOLE_OUT]: [STRING] ConvexHullWidget:      * @param p first point p
[13-37-05] [CONSOLE_OUT]: [STRING] ConvexHullWidget:      * @param q second point q
[13-37-05] [CONSOLE_OUT]: [STRING] ConvexHullWidget:      * @param r third point r
[13-37-05] [CONSOLE_OUT]: [STRING] ConvexHullWidget:      * @return 0 if the points are co-linear, 1 if the points go clockwise, 2 if they go counter-clockwise
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:                 //drawing of grid
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:                 //vertical lines
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:                 //horizontal lines
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:                 //placing blocks or taking them away based on mouse clicks
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:             //drawing walls by dragging
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:             //bottom square
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:             //next row up...
[13-37-05] [CONSOLE_OUT]: [STRING] GameOfLifeWidget:                     //update grids
[13-37-05] [CONSOLE_OUT]: [STRING] HashingWidget:     //empty constructor
[13-37-05] [CONSOLE_OUT]: [STRING] HashingWidget:         //multiple widgets should be allowed
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                 //alpha since possibility of alpha channel
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                 //init transparent image
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                 //compute the average based on max width, height, and the BI to write to
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:             //running add array
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:             //averaging array
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:             //fill averaging with zeros
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:             //for all files
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                 //create bi object
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                 //get pixel data
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                 //get current dimensions and offsets
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                 //loop through current data
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                         //add in current data to master array accounting for offset
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:                         //add in data to say this pixel was added to
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:             //can't divide by 0 so for the pixel values that were not changed, divide by a 1
[13-37-05] [CONSOLE_OUT]: [STRING] ImageAveragerWidget:             //write pixel data to image
[13-37-05] [CONSOLE_OUT]: [STRING] ImageResizerWidget:                           //add preview label with picture to frame
[13-37-05] [CONSOLE_OUT]: [STRING] MinecraftWidget:         //open minecraft if map exists
[13-37-05] [CONSOLE_OUT]: [STRING] NotesWidget:     //main frame
[13-37-05] [CONSOLE_OUT]: [STRING] NotesWidget:     //note editor components
[13-37-05] [CONSOLE_OUT]: [STRING] NotesWidget:                     //add closing confirmation if changes are not saved
[13-37-05] [CONSOLE_OUT]: [STRING] NotesWidget:                 //contents are equal and name is same so there is nothing to save so return
[13-37-05] [CONSOLE_OUT]: [STRING] NotesWidget:                 //saved so remove closing confirmation
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //draw path in blue
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //path drawing
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //path animation square draw
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //draw start in pink
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //draw end in orange
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //draw walls in black
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //draw edges again so that nothing is over them
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                     //path label smaller black text
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //open list outside methods to allow access to a* inner
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //performs the setup for the A* algorithm so that the timer can call update to interate over the next nodes
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:         //get rid of lingering path if exists
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:         //put start in the open
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:         //reset path stuff
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:         //animation chosen
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:             //spins off below action listener to update grid until path found or no path found or user intervention
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:             //instantly solve and paint grid and animate path if found and show words PATH or NO PATH
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:             // use a separate thread though to avoid lag
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //a singular iteration of the while loop of the A* algorithm
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:             //generate neihbors of this current node
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:                 //calculate new H
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //indicates a path was found and finished animating so takes the proper actions given this criteria
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //indicates a path was not found so takes the proper actions given this criteria
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //distance from node to end
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //distance from node to start
[13-37-05] [CONSOLE_OUT]: [STRING] PathFinderWidget:     //node class
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:     //ui
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:     //open simplex vars
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:         //set closed
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:         //init with random
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:         //set seed and octaves
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:         //fill noise based on current session's seed
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:         //ui constructions
[13-37-05] [CONSOLE_OUT]: [STRING] PerlinWidget:         //stop the animation when we are trying to close the frame if it's running
[EXTERNAL STOP] Cyder was force closed by an external entity such as an IDE stop or the OS' Task Manager
